{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Jie's wiki\n\n\nThis is a personal wiki that is used to keep notes.", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-jies-wiki", 
            "text": "This is a personal wiki that is used to keep notes.", 
            "title": "Welcome to Jie's wiki"
        }, 
        {
            "location": "/baby/Sleep_training/", 
            "text": "Baby sleep training\n\n\nbook notes by Jennifer T.\n\n\nI went through the book : Healthy Sleep Habits, Happy Child. I think it is critical we have a good solid understanding of facts and methods from professionals. Below are my notes.\n\n\n\n\nGood sleeping habits involve night sleep consolidation, regular and long naps, and self soothing skills\n\n\nAfter 12 weeks of age, a baby needs to nap at 9am and 1pm.\n\n\nAfter 12 weeks of age, the daytime sleep regulates itself and naps develop.\n\n\nAfter six weeks of age, sleep training can start but the bulk of the training occurs after four months.\n\n\nBefore 4 months of age, stay flexible and follow the baby''s flow of sleep.\n\n\nAfter 12 weeks of age, baby must go to bed earlier around 6-7pm. If you want your baby to sleep longer, they need to go to bed earlier and have good quality naps.\n\n\nAfter 4 months of age, sleeping outside the crib should be rare.\n\n\ncatnaps, motion sleep (car), light sleep (stroller), naps at wrong time, are defined as \"poor quality sleep\".\n\n\nHigh quality sleep occurs in a motionless environment, ie crib.\n\n\nTurn off swing when baby is asleep.\n\n\nAfter 4 months of age, naps will develop over an hour and the night sleep up to 12 hours.\n\n\nNever wake up a sleeping baby\n\n\nHealthy sleep is being defined by the duration, naps, night consolidation, schedule, and regularity.\n\n\nWhen moving bed time up, act by 20mn increments.\n\n\nFor naps it is important to watch for drowsiness signs (yawning, reduced activity, eyelids dropping) and use this window to take baby to crib. Don't miss your baby's window.\n\n\nNaps need to be timed according to drowsiness, allow motionless sleep, and develop a consistency in soothing style.\n\n\nThere are two methods for soothing styles. The first one is to drop the child in the crib soothed, drowsy but awake. The second one is to wait for deep sleep. Either one is fine, but needs consistency.\n\n\n\n\nThere is of course more in the book, but it should get us started.\n\n\nnotes by Emma A.\n\n\nAside from the articles, here are some points that I learned after having two babies sleep trained:\n\n\n\n\nYou definitely put the baby in the crib or wherever s/he sleeps on his/her back, BUT if they roll over on their stomach, leave them like that. Both of my babies started sleeping MUCH better when they started rolling over. I put them to bed on their back, but immediately they roll over and sleep the whole night on their stomach.\n\n\nMany babies use a pacifier to self-sooth when they are in the light sleep. Don\u2019t worry about weaning off the pacifier. My first one was as addicted to it as an alcoholic, but with a simple trick (again from babycenter) we weaned him off in one day!\n\n\nPut them to bed early like 6-7. (I know everyone said it, I\u2019m saying it again, it really makes a huge difference)\n\n\n\n\nGradually replace night feedings with water. (at the age of 6 months, a baby can stay full 6 hours at night, so you can feed him/her at 6pm, 12am and 6am, and in the middle if s/he wakes up for nursing, offer water.) Eventually they realize there\u2019s no milk in the middle just for soothing, and they stay sleep till they get hungry. (I couldn\u2019t believe this one, until I did it! It sounds harsh, I know, but you are actually doing him/her a favor by not making him/her \u201cthink\u201d that s/he has to wake up and nurse to self-sooth.)\n\n\n\n\n\n\nBabycenter.com articles were extremely helpful: Articles are short, all in bullet points with practical and touchable examples, very clear and instructive, and at the end you see other people\u2019s comments which at least make you think you are not alone!  Here\u2019s a sample article, but you can find many more: http://www.babycenter.com/0_baby-sleep-training-the-basics_1505715.bc", 
            "title": "Sleep training"
        }, 
        {
            "location": "/baby/Sleep_training/#baby-sleep-training", 
            "text": "", 
            "title": "Baby sleep training"
        }, 
        {
            "location": "/baby/Sleep_training/#book-notes-by-jennifer-t", 
            "text": "I went through the book : Healthy Sleep Habits, Happy Child. I think it is critical we have a good solid understanding of facts and methods from professionals. Below are my notes.   Good sleeping habits involve night sleep consolidation, regular and long naps, and self soothing skills  After 12 weeks of age, a baby needs to nap at 9am and 1pm.  After 12 weeks of age, the daytime sleep regulates itself and naps develop.  After six weeks of age, sleep training can start but the bulk of the training occurs after four months.  Before 4 months of age, stay flexible and follow the baby''s flow of sleep.  After 12 weeks of age, baby must go to bed earlier around 6-7pm. If you want your baby to sleep longer, they need to go to bed earlier and have good quality naps.  After 4 months of age, sleeping outside the crib should be rare.  catnaps, motion sleep (car), light sleep (stroller), naps at wrong time, are defined as \"poor quality sleep\".  High quality sleep occurs in a motionless environment, ie crib.  Turn off swing when baby is asleep.  After 4 months of age, naps will develop over an hour and the night sleep up to 12 hours.  Never wake up a sleeping baby  Healthy sleep is being defined by the duration, naps, night consolidation, schedule, and regularity.  When moving bed time up, act by 20mn increments.  For naps it is important to watch for drowsiness signs (yawning, reduced activity, eyelids dropping) and use this window to take baby to crib. Don't miss your baby's window.  Naps need to be timed according to drowsiness, allow motionless sleep, and develop a consistency in soothing style.  There are two methods for soothing styles. The first one is to drop the child in the crib soothed, drowsy but awake. The second one is to wait for deep sleep. Either one is fine, but needs consistency.   There is of course more in the book, but it should get us started.", 
            "title": "book notes by Jennifer T."
        }, 
        {
            "location": "/baby/Sleep_training/#notes-by-emma-a", 
            "text": "Aside from the articles, here are some points that I learned after having two babies sleep trained:   You definitely put the baby in the crib or wherever s/he sleeps on his/her back, BUT if they roll over on their stomach, leave them like that. Both of my babies started sleeping MUCH better when they started rolling over. I put them to bed on their back, but immediately they roll over and sleep the whole night on their stomach.  Many babies use a pacifier to self-sooth when they are in the light sleep. Don\u2019t worry about weaning off the pacifier. My first one was as addicted to it as an alcoholic, but with a simple trick (again from babycenter) we weaned him off in one day!  Put them to bed early like 6-7. (I know everyone said it, I\u2019m saying it again, it really makes a huge difference)   Gradually replace night feedings with water. (at the age of 6 months, a baby can stay full 6 hours at night, so you can feed him/her at 6pm, 12am and 6am, and in the middle if s/he wakes up for nursing, offer water.) Eventually they realize there\u2019s no milk in the middle just for soothing, and they stay sleep till they get hungry. (I couldn\u2019t believe this one, until I did it! It sounds harsh, I know, but you are actually doing him/her a favor by not making him/her \u201cthink\u201d that s/he has to wake up and nurse to self-sooth.)    Babycenter.com articles were extremely helpful: Articles are short, all in bullet points with practical and touchable examples, very clear and instructive, and at the end you see other people\u2019s comments which at least make you think you are not alone!  Here\u2019s a sample article, but you can find many more: http://www.babycenter.com/0_baby-sleep-training-the-basics_1505715.bc", 
            "title": "notes by Emma A."
        }, 
        {
            "location": "/fun/fun_places_for_kid/", 
            "text": "Fun places for kids in Seattle\n\n\nFun Seattle places for 2-4 year olds\n\n\n\n\nChildren''s museum in Everett\n\n\nNorthwest Rail Museum\n\n\nChuck E Cheese (reported food poisoning though)\n\n\nFerris wheel in downtown\n\n\nFerry to/back from Bainbridge\n\n\n\n\nRecreational\n\n\n\n\nLynnwood Rec Center Indoor Pool\n  - The Beach Swim is great for toddlers. \n\n\nhttp://www.elevatedsportz.com/\n\n\nhttp://www.playdatesea.com/\n\n\nMagnuson Arena Sports Fun Zone\n \u2013 The have around 10 bounce houses all in one place.  Get there early as they fill up fast on rainy days\n\n\nSeattle Gymnastics Academy Open Gym\n\n\nMercer slough natural park\n\n\nBellevue botanical garden\n\n\nSnoqualmie Falls\n\n\nFranklin Falls\n\n\n\n\nFarms and zoos\n\n\n\n\nRemlinger Farm\n U-pick strawberries\n\n\nFox Hollow Farm\n\n\nKelsey Creek Farm in Bellevue has sone farm animals and there is a playgound close by\n\n\nAnimal farm/petting zoo\n at Forest Park\n\n\nReptile Zoo", 
            "title": "Fun places for kid"
        }, 
        {
            "location": "/fun/fun_places_for_kid/#fun-places-for-kids-in-seattle", 
            "text": "Fun Seattle places for 2-4 year olds   Children''s museum in Everett  Northwest Rail Museum  Chuck E Cheese (reported food poisoning though)  Ferris wheel in downtown  Ferry to/back from Bainbridge   Recreational   Lynnwood Rec Center Indoor Pool   - The Beach Swim is great for toddlers.   http://www.elevatedsportz.com/  http://www.playdatesea.com/  Magnuson Arena Sports Fun Zone  \u2013 The have around 10 bounce houses all in one place.  Get there early as they fill up fast on rainy days  Seattle Gymnastics Academy Open Gym  Mercer slough natural park  Bellevue botanical garden  Snoqualmie Falls  Franklin Falls   Farms and zoos   Remlinger Farm  U-pick strawberries  Fox Hollow Farm  Kelsey Creek Farm in Bellevue has sone farm animals and there is a playgound close by  Animal farm/petting zoo  at Forest Park  Reptile Zoo", 
            "title": "Fun places for kids in Seattle"
        }, 
        {
            "location": "/fun/fun_places_to_go/", 
            "text": "Fun places to go\n\n\nYellowstone NP\n\n\nOnline resources:\n\n\n\n\nsee brief info \nlink\n\n\nsee the park map \nlink\n\n\nsee site photos \nlink\n\n\nsee plans \nlink\n\n\n\n\nSeattle\n\n\nThings to do\n\n\n\n\nseattle center  \u2014 3-5 hours\n\n\nspace needle, skycity restaurant\n\n\npacific center\n\n\nexperience music project\n\n\nride-a-duck\n\n\n\n\n\n\npike place market  \u2014 2 hours total \n\n\nfirst Starbucks\n\n\nclam chowder\n\n\nflying fish\n\n\ngum wall\n\n\n\n\n\n\nGreat wheel  \u2014 30~60min\n\n\nnight view of Seattle at Karry park  \u2014 30 min\n\n\nflight museum  \u2014 2 hr\n\n\nBoeing factory  \u2014 4 hr\n\n\nChina town\n\n\nUW campus, quad, Suzzello library \u2014 2 hr\n\n\nMS campus\n\n\nAmason campus\n\n\ngas work park  \u2014 1hr\n\n\nlake view cemetery, \u674e\u5c0f\u9f99\u5893 \u2014 30min\n\n\nMountain Rainier  \u2014 6 hr\n\n\nAlki beach park  \u2014 good place for dinner\n\n\nOlympic national park \u2014 2days\n\n\nNorth Cascades National Park \n\n\nRattlesnake ledge trail  \u2014 4hr\n\n\nSnoqualmie fall  \u2014 3hr\n\n\nwater front park  \u2014 30 min\n\n\nSeattle Premium outlet shopping \u2014 depends\n\n\nleavenworth  \u2014 1day\n\n\nSmith Tower  \u2014 1hr\n\n\nkayak in Lake Union\n\n\nflight tour, water plane  \u2014 2~3hr\n\n\n\n\nEat\n\n\n\n\ncrab pot $50\n\n\nstaples and fancy $45\n\n\nthe pink door $30\n\n\nPalisade\n\n\nAnthony - Edmonds waterfront\n\n\nChinese food: DingTaiFeng, Chiang's Gourment, Xi'an xiaochi, LanZhouLaMian, Baboon Garden \n\n\n\n\n3-day plan\n\n\n\n\n\n\nday 1 Thursday\n\n\n\n\npick up from airport\n\n\nmt rainier - bring snack\n\n\ndinner - Ding Tai Fung / Chang''s Gourmet\n\n\nkerry park night view\n\n\n\n\n\n\n\n\nday 2 Friday\n\n\n\n\nmorning - Outlet shopping / Shooting\n\n\nLunch - Lan Zhou La Mian / Xi''an xiao chi\n\n\nafternoon -Seattle Downtown / Seattle Art Museum / Pike Place Market / Great Wheel / Lake View Cemetery\n\n\nDinner - Crab Pot\n\n\n\n\n\n\n\n\nday 3 Saturday\n\n\n\n\nSeattle Center \n\n\nChina Town\n\n\nUW Campus\n\n\nFlight Museum\n\n\nDinner - Palisade / Edmonds Waterfront - Anthony''s\n\n\n\n\n\n\n\n\nLeave on Sunday\n\n\n\n\n\n\n8-day plan\n\n\n\n\n\n\nday 1 in city\n\n\n\n\nmust go\n seattle center  \u2014 5-6 hours\n\n\nspace needle, skycity restaurant\n\n\npacific center\n\n\nexperience music project\n\n\nride-a-duck - 1.5 hours\n\n\nglass museum - 1 hour\n\n\n\n\n\n\nalso nice\n flight museum  \u2014 2 hr\n\n\nmust go\n night view of Seattle downtown at Karry park  \u2014 30 min\n\n\n\n\n\n\n\n\nday 2 in city\n\n\n\n\nalso nice\n Boeing factory  \u2014 4 hr\n\n\nmust go\n pike place market  \u2014 2-3 hours total \n\n\nfirst Starbucks\n\n\nPike Place Chowder\n\n\nflying fish\n\n\ngum wall\n\n\nGreat wheel  \u2014 30~60min\n\n\n\n\n\n\nalso nice\n pioneer square under ground tour - 2 hr\n\n\n\n\n\n\n\n\nday 3 in city/local, select some\n\n\n\n\nUW campus, quad, Suzzello library \u2014 2 hr\n\n\nlake view cemetery, \u674e\u5c0f\u9f99\u5893 \u2014 30min\n\n\ngas work park \u2014 1hr\n\n\nfly tour, water plane  \u2014 2~3hr, ~$100/person\n\n\nChina town - 1 hr\n\n\nAlki beach park  \u2014 good place for dinner\n\n\nhiking - Rattlesnake ledge trail  \u2014 4hr\n\n\nhiking - Snoqualmie fall  \u2014 3hr\n\n\nSeattle Premium outlet shopping \u2014 depends\n\n\n\n\n\n\n\n\nday 4 for national parks\n\n\n\n\nMountain Rainier  \u2014 6 hr day trip\n\n\n\n\n\n\n\n\nday 5 for national parks\n\n\n\n\nOlympic national park \u2014 Edmonds-Kingston ferry/port angeles/Hurricane Ridge\n\n\n\n\n\n\n\n\nday 6 for national parks\n\n\n\n\nOlympic national park \u2014 Neah bay\n\n\n\n\n\n\n\n\nday 7 for national parks\n\n\n\n\nOlympic national park \u2014 Forks\n\n\n\n\n\n\n\n\nday 8, no rush \n\n\n\n\nSeattle Premium outlet shopping \u2014 depends\n\n\nhiking - Rattlesnake ledge trail  \u2014 4hr\n\n\nhiking - Snoqualmie fall  \u2014 3hr\n\n\n\n\n\n\n\n\n\u53c2\u8003\nOlympic NP \u6e38\u8bb0\n/\n\u884c\u8f66\u8def\u7ebf\n\n\nSan Francisco\n\n\nThings to do\n\n\n\n\ngolden gate bridge\n\n\ngolden gate park\n\n\nLombard street \u4e5d\u66f2\u82b1\u8857\n\n\nfishman's wharf \u6e14\u4eba\u7801\u5934\n\n\ncable car \u94db\u94db\u8f66\n\n\nalcatraz island \u6076\u9b54\u5c9b\n\n\nunion square \n\n\ntwin peaks \u53cc\u5b50\u5cf0\n\n\nSan Jose, 1hour south\n\n\nStanford, 40min south\n\n\n17 mile drive, 1.5+ hour south from downtown, pass by San Jose (silicon valley)\n\n\nHigh way 1, about 3 hour south from downtown,\n\n\n\n\nNear by national parks\n\n\n\n\nredwood national park, 5 hour north\n\n\nYosemite national park, 3hr east\n\n\n\n\nsuggested plan\n\n\n\n\nride the cable car from downtown to Fishman's wharf\n\n\nrent a bike at fishman's wharf and ride to golden gate bridge, bike on the bridge \n\n\nbike back to fishman's wharf.\n\n\nOR, bike all the way to Sausalito Ferry terminal and take the Ferry back to fishman's wharf. It would be very tiring this way\n\n\n\n\nBoston\n\n\nThings to do\n\n\n\n\nDuck tour\n\n\nBoston common\n\n\nFreedom trail\n\n\nquincy market\n\n\n\u74e6\u767b\u6e56\uff0c\u4e00\u5b9a\u8981\u5e26\u4e00\u672c\u68ad\u7f57\u7684\u8457\u4f5c\n\n\nharvard/MIT\n\n\nboston public garden\n\n\nback bay\n\n\nBunk hill\n\n\nwellesley\u5973\u6821\n\n\nwhale watch\n\n\nMuseum of fine art\n\n\nIsabella Stewart gardner Museum\n\n\nBoston Public Library\n\n\n\n\nChicago\n\n\nA 2-day trip plan\n\n\n\n\nDay 1:\n\n\nArt Institute of Chicago\n\n\nCloud Gate\n\n\nMillennium Park\n\n\nSkydeck Chicago\n\n\nMuseum of Science and Industry\n - this is near the University\n\n\n\n\n\n\nDay 2:\n\n\nThe Field Museum\n\n\nUniversity of Chicago\n\n\nMichigan Avenue\n\n\nMagnificent Mile\n\n\n\n\n\n\n\n\nOptional\n\n\n\n\nWrigley Field\n\n\nThe Boring Store\n - It just sells really funny things \n\n\n\n\nFood\n\n\n\n\nThe Parthenon - Greek food, Chicago has a great greek town. I think most of their restaurants are pretty good\n\n\nPurple pig - Tapas, sometimes has long lines\n\n\nchicago style hotdogs if you like hotdogs - probably many places to choose from\n\n\nDeep Dish Pizza - I have only been to Uno's but that is a chain. I heard that Lou Malnatis is good.\n\n\nthe chinatown there is better than Seattle's but not better than Vancouver\n\n\nClarks - this is a 24 hour diner. Its a chicago chain, pretty famous, and a fun experience but the food is just what you would expect from a diner - large portions for low prices!\n\n\nHot Chocolate - nice desserts \n\n\n\n\nOther resources\n\n\n\n\n\u4e2d\u6587\u535a\u7269\u9986\u6e38\u8bb0\n\n\n\u6e38\u8bb0\n\n\n\u6e38\u8bb0\n\n\n\u6e38\u8bb0\n\n\n\n\nVancouver\n\n\nThings to do\n\n\n\n\nStanley park\n\n\nCapliano suspension bridge\n\n\nChina town\n\n\nGastown\n\n\n\u52a0\u62ff\u5927\u5e7f\u573a\n 999 Canada Place, Vancouver, BC V6C 3T4\n\n\nEnglish Bay, Greater Vancouver, BC\n\n\nLions Gate Bridge, Vancouver, BC\n\n\n\u84b8\u6c7d\u949f\n Water Street Vancouver, British Columbia V6B 1B8\n\n\n\u4e2d\u5c71\u516c\u56ed\n Dr. Sun Yat-sen Classical Chinese Garden\n\n\nUBC botanical garden\n\n\nQueen Elizabeth park\n\n\nwhite rocks\n\n\n\n\nOther resources\n\n\n\n\n\u6e38\u8bb0\n\n\n\u6e38\u8bb0", 
            "title": "Fun places to go"
        }, 
        {
            "location": "/fun/fun_places_to_go/#fun-places-to-go", 
            "text": "", 
            "title": "Fun places to go"
        }, 
        {
            "location": "/fun/fun_places_to_go/#yellowstone-np", 
            "text": "Online resources:   see brief info  link  see the park map  link  see site photos  link  see plans  link", 
            "title": "Yellowstone NP"
        }, 
        {
            "location": "/fun/fun_places_to_go/#seattle", 
            "text": "Things to do   seattle center  \u2014 3-5 hours  space needle, skycity restaurant  pacific center  experience music project  ride-a-duck    pike place market  \u2014 2 hours total   first Starbucks  clam chowder  flying fish  gum wall    Great wheel  \u2014 30~60min  night view of Seattle at Karry park  \u2014 30 min  flight museum  \u2014 2 hr  Boeing factory  \u2014 4 hr  China town  UW campus, quad, Suzzello library \u2014 2 hr  MS campus  Amason campus  gas work park  \u2014 1hr  lake view cemetery, \u674e\u5c0f\u9f99\u5893 \u2014 30min  Mountain Rainier  \u2014 6 hr  Alki beach park  \u2014 good place for dinner  Olympic national park \u2014 2days  North Cascades National Park   Rattlesnake ledge trail  \u2014 4hr  Snoqualmie fall  \u2014 3hr  water front park  \u2014 30 min  Seattle Premium outlet shopping \u2014 depends  leavenworth  \u2014 1day  Smith Tower  \u2014 1hr  kayak in Lake Union  flight tour, water plane  \u2014 2~3hr   Eat   crab pot $50  staples and fancy $45  the pink door $30  Palisade  Anthony - Edmonds waterfront  Chinese food: DingTaiFeng, Chiang's Gourment, Xi'an xiaochi, LanZhouLaMian, Baboon Garden    3-day plan    day 1 Thursday   pick up from airport  mt rainier - bring snack  dinner - Ding Tai Fung / Chang''s Gourmet  kerry park night view     day 2 Friday   morning - Outlet shopping / Shooting  Lunch - Lan Zhou La Mian / Xi''an xiao chi  afternoon -Seattle Downtown / Seattle Art Museum / Pike Place Market / Great Wheel / Lake View Cemetery  Dinner - Crab Pot     day 3 Saturday   Seattle Center   China Town  UW Campus  Flight Museum  Dinner - Palisade / Edmonds Waterfront - Anthony''s     Leave on Sunday    8-day plan    day 1 in city   must go  seattle center  \u2014 5-6 hours  space needle, skycity restaurant  pacific center  experience music project  ride-a-duck - 1.5 hours  glass museum - 1 hour    also nice  flight museum  \u2014 2 hr  must go  night view of Seattle downtown at Karry park  \u2014 30 min     day 2 in city   also nice  Boeing factory  \u2014 4 hr  must go  pike place market  \u2014 2-3 hours total   first Starbucks  Pike Place Chowder  flying fish  gum wall  Great wheel  \u2014 30~60min    also nice  pioneer square under ground tour - 2 hr     day 3 in city/local, select some   UW campus, quad, Suzzello library \u2014 2 hr  lake view cemetery, \u674e\u5c0f\u9f99\u5893 \u2014 30min  gas work park \u2014 1hr  fly tour, water plane  \u2014 2~3hr, ~$100/person  China town - 1 hr  Alki beach park  \u2014 good place for dinner  hiking - Rattlesnake ledge trail  \u2014 4hr  hiking - Snoqualmie fall  \u2014 3hr  Seattle Premium outlet shopping \u2014 depends     day 4 for national parks   Mountain Rainier  \u2014 6 hr day trip     day 5 for national parks   Olympic national park \u2014 Edmonds-Kingston ferry/port angeles/Hurricane Ridge     day 6 for national parks   Olympic national park \u2014 Neah bay     day 7 for national parks   Olympic national park \u2014 Forks     day 8, no rush    Seattle Premium outlet shopping \u2014 depends  hiking - Rattlesnake ledge trail  \u2014 4hr  hiking - Snoqualmie fall  \u2014 3hr     \u53c2\u8003 Olympic NP \u6e38\u8bb0 / \u884c\u8f66\u8def\u7ebf", 
            "title": "Seattle"
        }, 
        {
            "location": "/fun/fun_places_to_go/#san-francisco", 
            "text": "Things to do   golden gate bridge  golden gate park  Lombard street \u4e5d\u66f2\u82b1\u8857  fishman's wharf \u6e14\u4eba\u7801\u5934  cable car \u94db\u94db\u8f66  alcatraz island \u6076\u9b54\u5c9b  union square   twin peaks \u53cc\u5b50\u5cf0  San Jose, 1hour south  Stanford, 40min south  17 mile drive, 1.5+ hour south from downtown, pass by San Jose (silicon valley)  High way 1, about 3 hour south from downtown,   Near by national parks   redwood national park, 5 hour north  Yosemite national park, 3hr east   suggested plan   ride the cable car from downtown to Fishman's wharf  rent a bike at fishman's wharf and ride to golden gate bridge, bike on the bridge   bike back to fishman's wharf.  OR, bike all the way to Sausalito Ferry terminal and take the Ferry back to fishman's wharf. It would be very tiring this way", 
            "title": "San Francisco"
        }, 
        {
            "location": "/fun/fun_places_to_go/#boston", 
            "text": "Things to do   Duck tour  Boston common  Freedom trail  quincy market  \u74e6\u767b\u6e56\uff0c\u4e00\u5b9a\u8981\u5e26\u4e00\u672c\u68ad\u7f57\u7684\u8457\u4f5c  harvard/MIT  boston public garden  back bay  Bunk hill  wellesley\u5973\u6821  whale watch  Museum of fine art  Isabella Stewart gardner Museum  Boston Public Library", 
            "title": "Boston"
        }, 
        {
            "location": "/fun/fun_places_to_go/#chicago", 
            "text": "A 2-day trip plan   Day 1:  Art Institute of Chicago  Cloud Gate  Millennium Park  Skydeck Chicago  Museum of Science and Industry  - this is near the University    Day 2:  The Field Museum  University of Chicago  Michigan Avenue  Magnificent Mile     Optional   Wrigley Field  The Boring Store  - It just sells really funny things    Food   The Parthenon - Greek food, Chicago has a great greek town. I think most of their restaurants are pretty good  Purple pig - Tapas, sometimes has long lines  chicago style hotdogs if you like hotdogs - probably many places to choose from  Deep Dish Pizza - I have only been to Uno's but that is a chain. I heard that Lou Malnatis is good.  the chinatown there is better than Seattle's but not better than Vancouver  Clarks - this is a 24 hour diner. Its a chicago chain, pretty famous, and a fun experience but the food is just what you would expect from a diner - large portions for low prices!  Hot Chocolate - nice desserts    Other resources   \u4e2d\u6587\u535a\u7269\u9986\u6e38\u8bb0  \u6e38\u8bb0  \u6e38\u8bb0  \u6e38\u8bb0", 
            "title": "Chicago"
        }, 
        {
            "location": "/fun/fun_places_to_go/#vancouver", 
            "text": "Things to do   Stanley park  Capliano suspension bridge  China town  Gastown  \u52a0\u62ff\u5927\u5e7f\u573a  999 Canada Place, Vancouver, BC V6C 3T4  English Bay, Greater Vancouver, BC  Lions Gate Bridge, Vancouver, BC  \u84b8\u6c7d\u949f  Water Street Vancouver, British Columbia V6B 1B8  \u4e2d\u5c71\u516c\u56ed  Dr. Sun Yat-sen Classical Chinese Garden  UBC botanical garden  Queen Elizabeth park  white rocks   Other resources   \u6e38\u8bb0  \u6e38\u8bb0", 
            "title": "Vancouver"
        }, 
        {
            "location": "/tackles/Docker/", 
            "text": "Docker for mac\n\n\nSee the official \ninstruction page\n for installation detail.\n\n\nquick start\n\n\n\n\nstart docker from /Applications or launchpad or spotlight search Docker\n\n\n\n\ndocker basics, see \nexamples\n\n\n$ docker run ubuntu /bin/echo 'Hello world'  # start a container\n$ docker run -ti ubuntu /bin/bash            # start an interactive container\n\n$ docker ps                 # list running containers\n$ docker ps -a              # list all containers\n$ docker logs \ncontainer\n   # Shows us the standard output of a container.\n$ docker stop \ncontainer\n   # Stops running containers.\n$ docker start \ncontainer\n  # restart a containers.\n$ docker rm \ncontainer\n     # remover a containers.\n$ docker images             # list all images\n$ docker search ubuntu      # search for images\n$ docker pull ubuntu        # download an image\n$ docker pull ubuntu:14.04  # download an image with tag\n$ docker push ouruser/sinatra\n\n$ docker tag 5db5f8471261 ouruser/sinatra:devel\n$ docker images ouruser/sinatra\n$ docker rmi training/sinatra\n\n$ docker run -d -P --name web training/webapp python app.py\n$ docker inspect web\n$ docker stop web\n$ docker rm web\n\n$ docker version\n$ docker --help\n$ docker attach --help\n\n\n\n\n\n\n\nbuild a new image\n\n\n# method 1: modify and commit\n$ docker run -t -i training/sinatra /bin/bash\nroot@0b2616b0e5a8:/# gem install json\nroot@0b2616b0e5a8:/# exit\n$ docker commit -m \"Added json gem\" -a \"Kate Smith\" \\\n0b2616b0e5a8 ouruser/sinatra:v2\n$ docker images\n#\n# method 2: build from a Dockerfile\n$ mkdir sinatra\n$ cd sinatra\n$ touch Dockerfile\n# save the following to the Dockerfile\n    # This is a comment\n    FROM ubuntu:14.04\n    MAINTAINER Kate Smith \nksmith@example.com\n\n    RUN apt-get update \n apt-get install -y ruby ruby-dev\n    RUN gem install sinatra\n$ docker build -t ouruser/sinatra:v2 .\n\n\n\n\n\n\n\nmount host directory to a container\n\n\n$ docker run -d -P --name web -v /host/path:/container/path training/webapp python app.py\n$ docker run --rm -it -v ~/.bash_history:/root/.bash_history ubuntu /bin/bash\n$\n# shared volume\n$ docker create -v /dbdata --name dbstore training/postgres /bin/true\n$ docker run -d --volumes-from dbstore --name db1 training/postgres\n$ docker run -d --volumes-from dbstore --name db2 training/postgres\n$ docker run --rm -v /foo -v awesome:/bar busybox top # remove volume\n\n\n\n\n\n\n\nopen gui apps in a docker container\n\n\n# install socat and xquartz first\n$ brew install socat\n$ socat TCP-LISTEN:6000,reuseaddr,fork UNIX-CLIENT:\\\"$DISPLAY\\\"\n# in another window\n$ open -a XQuartz\n$ open -a /Applications/Docker/Docker\\ Quickstart\\ Terminal.app\n# in the Docker CPL terminal\n$ ifconfig # find ip address\n$ docker run -ti -e DISPLAY=192.168.1.115:0 ubuntu /bin/bash\n# should be able to apps gui\n\n\n\n\n\n\n\npush to docker hub\n\n\n$ docker login\n$ docker push jieatdocker/python:v2\n\n\n\n\n\n\n\nresources\n\n\n\n\nquickstart Dock engine 1.10  at docker.com\n\n\nquickstart Dock engine at docker.com\n\n\ndocker training page\n\n\ndocker training - video tutorials - self paced", 
            "title": "Docker"
        }, 
        {
            "location": "/tackles/Docker/#docker-for-mac", 
            "text": "See the official  instruction page  for installation detail.", 
            "title": "Docker for mac"
        }, 
        {
            "location": "/tackles/Docker/#quick-start", 
            "text": "start docker from /Applications or launchpad or spotlight search Docker   docker basics, see  examples  $ docker run ubuntu /bin/echo 'Hello world'  # start a container\n$ docker run -ti ubuntu /bin/bash            # start an interactive container\n\n$ docker ps                 # list running containers\n$ docker ps -a              # list all containers\n$ docker logs  container    # Shows us the standard output of a container.\n$ docker stop  container    # Stops running containers.\n$ docker start  container   # restart a containers.\n$ docker rm  container      # remover a containers.\n$ docker images             # list all images\n$ docker search ubuntu      # search for images\n$ docker pull ubuntu        # download an image\n$ docker pull ubuntu:14.04  # download an image with tag\n$ docker push ouruser/sinatra\n\n$ docker tag 5db5f8471261 ouruser/sinatra:devel\n$ docker images ouruser/sinatra\n$ docker rmi training/sinatra\n\n$ docker run -d -P --name web training/webapp python app.py\n$ docker inspect web\n$ docker stop web\n$ docker rm web\n\n$ docker version\n$ docker --help\n$ docker attach --help    build a new image  # method 1: modify and commit\n$ docker run -t -i training/sinatra /bin/bash\nroot@0b2616b0e5a8:/# gem install json\nroot@0b2616b0e5a8:/# exit\n$ docker commit -m \"Added json gem\" -a \"Kate Smith\" \\\n0b2616b0e5a8 ouruser/sinatra:v2\n$ docker images\n#\n# method 2: build from a Dockerfile\n$ mkdir sinatra\n$ cd sinatra\n$ touch Dockerfile\n# save the following to the Dockerfile\n    # This is a comment\n    FROM ubuntu:14.04\n    MAINTAINER Kate Smith  ksmith@example.com \n    RUN apt-get update   apt-get install -y ruby ruby-dev\n    RUN gem install sinatra\n$ docker build -t ouruser/sinatra:v2 .    mount host directory to a container  $ docker run -d -P --name web -v /host/path:/container/path training/webapp python app.py\n$ docker run --rm -it -v ~/.bash_history:/root/.bash_history ubuntu /bin/bash\n$\n# shared volume\n$ docker create -v /dbdata --name dbstore training/postgres /bin/true\n$ docker run -d --volumes-from dbstore --name db1 training/postgres\n$ docker run -d --volumes-from dbstore --name db2 training/postgres\n$ docker run --rm -v /foo -v awesome:/bar busybox top # remove volume    open gui apps in a docker container  # install socat and xquartz first\n$ brew install socat\n$ socat TCP-LISTEN:6000,reuseaddr,fork UNIX-CLIENT:\\\"$DISPLAY\\\"\n# in another window\n$ open -a XQuartz\n$ open -a /Applications/Docker/Docker\\ Quickstart\\ Terminal.app\n# in the Docker CPL terminal\n$ ifconfig # find ip address\n$ docker run -ti -e DISPLAY=192.168.1.115:0 ubuntu /bin/bash\n# should be able to apps gui    push to docker hub  $ docker login\n$ docker push jieatdocker/python:v2", 
            "title": "quick start"
        }, 
        {
            "location": "/tackles/Docker/#resources", 
            "text": "quickstart Dock engine 1.10  at docker.com  quickstart Dock engine at docker.com  docker training page  docker training - video tutorials - self paced", 
            "title": "resources"
        }, 
        {
            "location": "/tackles/Fortran_on_Ubuntu/", 
            "text": "Install intel Fortan on Ubuntu 12.10\n\n\nPrerequisite\n\n\n\n\n\n\nsee \nthis link\n\n\nmv /bin/sh /bin/sh.orig\nln -s /bin/bash /bin/sh\n\n\n\n\n\n\n\nUbuntu 11.04 through Ubuntu 12.10  :\n\n\n\n\nComposer XE  (aka version compiler versions 12.x and 13.x) prerequisites for Ubuntu Desktop, assuming that gcc and g++ are installed already:\napt-get install build-essential\napt-get install gcc-multilib\napt-get install rpm\napt-get install ia32-libs  #only needed if you install the 32bit compiler\napt-get install openjdk-6-jre-headless\n\n\n\n\n\n\n\nDownload\n\n\n\n\nDownload Fortran compiler intel. An email address is required.  \nDownload link\n\n\n\n\nInstall\n\n\n\n\n\n\nlocate the download tar file\n\n\ntar -xvzf l_fcomposer.tgz\ncd l_fcomposer\nsudo ./install.sh\n\n\n\n\n\n\n\nFollow the installation instructions:\n\n\n\n\nchoose Option 1 to install Intel Fortran, \n\n\nchoose Option 1 to proceed with a serial number.\n\n\ntype in the serial number (case-sensitive) given in the email. (XXXX-XXXXXXXX). Choose 1 for a default install.\n\n\nPress Enter to read the license agreement. The spacebar speeds through this quickly. Type 'accept' to accept the license agreement. \n\n\nAt some point the installation may stop to ask for some 'optional' packages to be installed. Skip this warning.\n\n\n\n\n\n\n\n\nConfig system\n\n\n\n\n\n\nAfter the installation is finished go to the terminal and:\n\n\ncd ~\nnano .bashrc\n\n\n\n\n\n\n\ngo to the end of this file and add the following lines:\n\n\nPATH=\"/opt/intel/Compiler/.../bin/intel64:$PATH\"\nexport PATH\nLD_LIBRARY_PATH=\"/opt/intel/Compiler/.../lib/intel64:$LD_LIBRARY_PATH\"\nexport LD_LIBRARY_PATH\n\n\n\n\n\n\n\nEnter the right path in the lines above. Exit the file by saving the changes. \n\n\n\n\n\n\nlet the system read the updated paths by the command:\n\n\nsource .bashrc\n\n\n\n\n\n\n\nThe installation is finished.\n\n\nTest\n\n\n\n\n\n\nwrite simple file as hello.f containing\n\n\nprogram hello\nprint *,'Hello World!'\nend program\n\n\n\n\n\n\n\nCompile and run your code by the command:\n\n\nifort hello.f\n./a.out", 
            "title": "Fortran on Ubuntu"
        }, 
        {
            "location": "/tackles/Fortran_on_Ubuntu/#install-intel-fortan-on-ubuntu-1210", 
            "text": "", 
            "title": "Install intel Fortan on Ubuntu 12.10"
        }, 
        {
            "location": "/tackles/Fortran_on_Ubuntu/#prerequisite", 
            "text": "see  this link  mv /bin/sh /bin/sh.orig\nln -s /bin/bash /bin/sh    Ubuntu 11.04 through Ubuntu 12.10  :   Composer XE  (aka version compiler versions 12.x and 13.x) prerequisites for Ubuntu Desktop, assuming that gcc and g++ are installed already: apt-get install build-essential\napt-get install gcc-multilib\napt-get install rpm\napt-get install ia32-libs  #only needed if you install the 32bit compiler\napt-get install openjdk-6-jre-headless", 
            "title": "Prerequisite"
        }, 
        {
            "location": "/tackles/Fortran_on_Ubuntu/#download", 
            "text": "Download Fortran compiler intel. An email address is required.   Download link", 
            "title": "Download"
        }, 
        {
            "location": "/tackles/Fortran_on_Ubuntu/#install", 
            "text": "locate the download tar file  tar -xvzf l_fcomposer.tgz\ncd l_fcomposer\nsudo ./install.sh    Follow the installation instructions:   choose Option 1 to install Intel Fortran,   choose Option 1 to proceed with a serial number.  type in the serial number (case-sensitive) given in the email. (XXXX-XXXXXXXX). Choose 1 for a default install.  Press Enter to read the license agreement. The spacebar speeds through this quickly. Type 'accept' to accept the license agreement.   At some point the installation may stop to ask for some 'optional' packages to be installed. Skip this warning.", 
            "title": "Install"
        }, 
        {
            "location": "/tackles/Fortran_on_Ubuntu/#config-system", 
            "text": "After the installation is finished go to the terminal and:  cd ~\nnano .bashrc    go to the end of this file and add the following lines:  PATH=\"/opt/intel/Compiler/.../bin/intel64:$PATH\"\nexport PATH\nLD_LIBRARY_PATH=\"/opt/intel/Compiler/.../lib/intel64:$LD_LIBRARY_PATH\"\nexport LD_LIBRARY_PATH    Enter the right path in the lines above. Exit the file by saving the changes.     let the system read the updated paths by the command:  source .bashrc    The installation is finished.", 
            "title": "Config system"
        }, 
        {
            "location": "/tackles/Fortran_on_Ubuntu/#test", 
            "text": "write simple file as hello.f containing  program hello\nprint *,'Hello World!'\nend program    Compile and run your code by the command:  ifort hello.f\n./a.out", 
            "title": "Test"
        }, 
        {
            "location": "/tackles/github_host/", 
            "text": "use github to host a simple website\n\n\nhow-to\n\n\nfor detail refer to \nthis site\n\n\nbriefly, first create a repo on github, then in command lines, do\n\n\ncd site_dir\ngit init\ngit remote add origin https://github.com/***\ngit checkout --orphan gh-pages\ngit add .\ngit commit -m \nadding pages\n\ngit push origin gh-pages\n\n\n\n\ndone! http://username.github.io/repository/.\n\n\nupdate jwiki\n\n\ncd my-wiki\nvim doc/file_to_edit.md\nmkdocs build\ncd site\ngit add .\ngit commit -m \nedited file_to_edit\n\ngit push origin gh-pages", 
            "title": "Github host"
        }, 
        {
            "location": "/tackles/github_host/#use-github-to-host-a-simple-website", 
            "text": "", 
            "title": "use github to host a simple website"
        }, 
        {
            "location": "/tackles/github_host/#how-to", 
            "text": "for detail refer to  this site  briefly, first create a repo on github, then in command lines, do  cd site_dir\ngit init\ngit remote add origin https://github.com/***\ngit checkout --orphan gh-pages\ngit add .\ngit commit -m  adding pages \ngit push origin gh-pages  done! http://username.github.io/repository/.", 
            "title": "how-to"
        }, 
        {
            "location": "/tackles/github_host/#update-jwiki", 
            "text": "cd my-wiki\nvim doc/file_to_edit.md\nmkdocs build\ncd site\ngit add .\ngit commit -m  edited file_to_edit \ngit push origin gh-pages", 
            "title": "update jwiki"
        }, 
        {
            "location": "/tackles/mac_commands/", 
            "text": "Compress files\n\n\n\n\n\n\nunpack .tar.gz files  \n\n\n$ gunzip -c foo.tar.gz | tar xopf - \n$ gunzip -c foo.tar.gz | tar xopft -\n\n\n\n\n\n\n\nunpack .tar files     \n\n\n$ tar xopf foo.tar  \n$ tar xopft foo.tar\n\n\n\n\n\n\n\nunpack .zip files \n\n\n$ unzip -a foo.zip\n\n\n\n\n\n\n\npack .zip files   \n\n\n$ zip -r y.zip y.pdf\n\n\n\n\n\n\n\nDisk usage\n\n\n$ du -h\n$ du -sh\n$ du -sh *\n$ du -sh dir_path\n$ du -a\n$ du -c # total contral\n$ du -sh #show total usage in the dir\n\n$ df -h\n\n\n\n\nvim-latex\n\n\n\n\nvim-latex is install in ~/.vim\n\n\nto configure vim only for latex:\n\n\nedit file ~/.vim/ftplugin/tex_latexSuite.vim\n\n\n\n\nPurdue server\n\n\nconte.rcac.purdue.edu cluster:\n\n\n$ module avail  # shows all available modules\n$ module load   # load module, for example:\n$ module load matlab/R2013a\n\n\n\n\nvirtualbox\n\n\n\n\nID/pw ubuntu/chenjie\n\n\n\n\nchange ubuntu password:\n\n\n\n\nreboot while hold shift\n\n\nLet your virtual Machine to capture your mouse.\n\n\nHold the shift key down to get the grub menu.\n\n\nSelect the recovery mode option.\n\n\nSelect drop to root shell prompt.\n\n\ntype command: mount -rw -o remount /\n\n\nNow, change with # passwd [username] (You can also see the list of users using # nano /etc/passwd).\n\n\n\n\n\n\n\n\nmount shared folder:\n\n\n\n\nadd shared folder in virtualBox\n\n\ntype command in ubuntu: \n\n\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 share /home/\nuser\n/vboxshare\n\n\n\n\n\n\n\n\ngrip\n\n\nuse grip to convert md file to html file from command line. see \nthis link\n\n\ngrip \ngrip foo.md\ngrip foo.md --export foo.html\n\n\n\n\nSypder-py2\n\n\nadd a new module to Syper\n\n\n$python\n\nimport talib\n\ntalib  # copy the module location\n\neixt()\n\n\n\n\nIf it is a .egg file\n\n\n$cd /Applications/Spyder-Py2.app/Contents/Resources/lib/python2.7/\n$cp module_path/new_module.egg .\nunzip new_module.egg\nrm new_module.egg\n\n\n\n\nif it is a folder\n\n\n$cp -r module_path/new_module_folder /Applications/Spyder-Py2.app/Contents/Resources/lib/python2.7\n\n\n\n\nSSH public/private keys\n\n\nSSH (Secure Shell) can be set up with public/private key pairs so that you do not have to type the password each time. Because SSH is the transport for other services such as SCP (secure copy), SFTP (secure file transfer), and other services (CVS, etc), this can be very convenient and save you a lot of typing.\n\n\nOn the local machine, type the BOLD part. The non-bold part is what you might see as output or prompt.\n\n\n\n\n\n\nStep 1: \n\n\n$ ssh-keygen -t dsa \n    Generating public/private dsa key pair. \n    Enter file in which to save the key (~/.ssh/id_dsa): (just type return) \n    Enter passphrase (empty for no passphrase): (just type return) \n    Enter same passphrase again: (just type return) \n    Your identification has been saved in ~/.ssh/id_dsa \n    Your public key has been saved in ~/.ssh/id_dsa.pub \n    The key fingerprint is: \n    Some really long string\n\n\n\n\n\nStep 2: Then, paste the content of the local \n~/.ssh/id_dsa.pub\n file into the file \n~/.ssh/authorized_keys\n on the remote host.\nRSA instead of DSA\n\n\nIf you want something strong, you could try \n\n$ ssh-keygen -t rsa -b 4096\n\n\nInstead of the names \nid_dsa and id_dsa.pub\n, it will be \nid_rsa and id_rsa.pub\n , etc.\n\n\nThe rest of the steps are identical.\n\n\n\n\n\n\n\n\n\n\n\n\nscreen\n\n\n\n\nstart screen\n\n\n\n\nscreen -ls      # list all screen sessions\nscreen          # start screen\nscreen -S Name  # start screen and give it a name\nscreen -r       # resume last screen\nscreen -r Name  # resume screen with a name\n\n\n\n\n\n\nexit\n\n\n\n\nexit\nC-a d\nC-a D D\nC-a \\", 
            "title": "Mac commands"
        }, 
        {
            "location": "/tackles/mac_commands/#compress-files", 
            "text": "unpack .tar.gz files    $ gunzip -c foo.tar.gz | tar xopf - \n$ gunzip -c foo.tar.gz | tar xopft -    unpack .tar files       $ tar xopf foo.tar  \n$ tar xopft foo.tar    unpack .zip files   $ unzip -a foo.zip    pack .zip files     $ zip -r y.zip y.pdf", 
            "title": "Compress files"
        }, 
        {
            "location": "/tackles/mac_commands/#disk-usage", 
            "text": "$ du -h\n$ du -sh\n$ du -sh *\n$ du -sh dir_path\n$ du -a\n$ du -c # total contral\n$ du -sh #show total usage in the dir\n\n$ df -h", 
            "title": "Disk usage"
        }, 
        {
            "location": "/tackles/mac_commands/#vim-latex", 
            "text": "vim-latex is install in ~/.vim  to configure vim only for latex:  edit file ~/.vim/ftplugin/tex_latexSuite.vim", 
            "title": "vim-latex"
        }, 
        {
            "location": "/tackles/mac_commands/#purdue-server", 
            "text": "conte.rcac.purdue.edu cluster:  $ module avail  # shows all available modules\n$ module load   # load module, for example:\n$ module load matlab/R2013a", 
            "title": "Purdue server"
        }, 
        {
            "location": "/tackles/mac_commands/#virtualbox", 
            "text": "ID/pw ubuntu/chenjie   change ubuntu password:   reboot while hold shift  Let your virtual Machine to capture your mouse.  Hold the shift key down to get the grub menu.  Select the recovery mode option.  Select drop to root shell prompt.  type command: mount -rw -o remount /  Now, change with # passwd [username] (You can also see the list of users using # nano /etc/passwd).     mount shared folder:   add shared folder in virtualBox  type command in ubuntu:   $ sudo mount -t vboxsf -o uid=1000,gid=1000 share /home/ user /vboxshare", 
            "title": "virtualbox"
        }, 
        {
            "location": "/tackles/mac_commands/#grip", 
            "text": "use grip to convert md file to html file from command line. see  this link  grip \ngrip foo.md\ngrip foo.md --export foo.html", 
            "title": "grip"
        }, 
        {
            "location": "/tackles/mac_commands/#sypder-py2", 
            "text": "add a new module to Syper  $python import talib talib  # copy the module location eixt()  If it is a .egg file  $cd /Applications/Spyder-Py2.app/Contents/Resources/lib/python2.7/\n$cp module_path/new_module.egg .\nunzip new_module.egg\nrm new_module.egg  if it is a folder  $cp -r module_path/new_module_folder /Applications/Spyder-Py2.app/Contents/Resources/lib/python2.7", 
            "title": "Sypder-py2"
        }, 
        {
            "location": "/tackles/mac_commands/#ssh-publicprivate-keys", 
            "text": "SSH (Secure Shell) can be set up with public/private key pairs so that you do not have to type the password each time. Because SSH is the transport for other services such as SCP (secure copy), SFTP (secure file transfer), and other services (CVS, etc), this can be very convenient and save you a lot of typing.  On the local machine, type the BOLD part. The non-bold part is what you might see as output or prompt.    Step 1:   $ ssh-keygen -t dsa \n    Generating public/private dsa key pair. \n    Enter file in which to save the key (~/.ssh/id_dsa): (just type return) \n    Enter passphrase (empty for no passphrase): (just type return) \n    Enter same passphrase again: (just type return) \n    Your identification has been saved in ~/.ssh/id_dsa \n    Your public key has been saved in ~/.ssh/id_dsa.pub \n    The key fingerprint is: \n    Some really long string   Step 2: Then, paste the content of the local  ~/.ssh/id_dsa.pub  file into the file  ~/.ssh/authorized_keys  on the remote host.\nRSA instead of DSA  If you want something strong, you could try  $ ssh-keygen -t rsa -b 4096  Instead of the names  id_dsa and id_dsa.pub , it will be  id_rsa and id_rsa.pub  , etc.  The rest of the steps are identical.", 
            "title": "SSH public/private keys"
        }, 
        {
            "location": "/tackles/mac_commands/#screen", 
            "text": "start screen   screen -ls      # list all screen sessions\nscreen          # start screen\nscreen -S Name  # start screen and give it a name\nscreen -r       # resume last screen\nscreen -r Name  # resume screen with a name   exit   exit\nC-a d\nC-a D D\nC-a \\", 
            "title": "screen"
        }, 
        {
            "location": "/tackles/markdown/", 
            "text": "MarkDown notes\n\n\nHeaders\n\n\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n\n\n\n\nH1\n\n\nH2\n\n\nH3\n\n\nH4\n\n\nH5\n\n\nH6\n\n\nAlternatively, for H1 and H2, an underline-ish style:\n\n\nAlt-H1\n======\n\nAlt-H2\n------\n\n\n\n\nAlt-H1\n\n\nAlt-H2\n\n\nlist\n\n\n1. First ordered list item\n2. Another item\n    * Unordered sub-list. \n1. Actual numbers don't matter, just that it's a number\n    1. Ordered sub-list\n4. And another item.\n\n    You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n    To have a line break without a paragraph, you will need to use two trailing spaces.\u22c5\u22c5\n\nNote that this line is separate, but within the same paragraph.\u22c5\u22c5\n    (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n\n\n\n\n\nFirst ordered list item\n\n\nAnother item\n\n\nUnordered sub-list. \n\n\n\n\n\n\nActual numbers don't matter, just that it's a number\n\n\nOrdered sub-list\n\n\n\n\n\n\n\n\nAnd another item.\n\n\nYou can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n\nTo have a line break without a paragraph, you will need to use two trailing spaces.\u22c5\u22c5\n\n\n\n\n\n\nNote that this line is separate, but within the same paragraph.\u22c5\u22c5\n    (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n\n\n\nUnordered list can use asterisks\n\n\nOr minuses\n\n\nOr pluses\n\n\n\n\ntext\n\n\n**bold** or __bold__\n\n*this is italic* or _italic_\n\n**blod _italic_**\n\n~~sctrach this~~\n\n\n\n\nbold\n or \nbold\n\n\nthis is italic\n or \nitalic\n\n\nblod \nitalic\n\n\n~~sctrach this~~\n\n\nlinks\n\n\n- style 1: [google](http://www.google.com)\n- style 2: \nhttp://www.google.com\n\n- style 3: reference style, [google][1]\n\n[1]: http://www.google.com\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png\n\n\n\n\n\n\nstyle 1: \ngoogle\n\n\nstyle 2: \nhttp://www.google.com\n\n\nstyle 3: reference style, [google][1]\n\n\n\n\nquote\n\n\n Blockquotes are very handy in email to emulate reply text.\n\n This line is part of the same quote.\n\nQuote break.\n\n\n This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. \n\n\n\n\n\n\nBlockquotes are very handy in email to emulate reply text.\nThis line is part of the same quote.\n\n\n\n\nQuote break.\n\n\n\n\nThis is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can \nput\n \nMarkdown\n into a blockquote. \n\n\n\n\nImages\n\n\nHere's our logo (hover to see the title text):\n\n\nInline-style: \n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \nLogo Title Text 1\n)\n\nReference-style: \n![alt text][logo]\n\n\n\n\nInline-style: \n\n\n\nReference-style: \n![alt text][logo]\n\n\ntable\n\n\nColons can be used to align columns.\n\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\n\n\n\n\n\n\n\n\n\nTables\n\n\nAre\n\n\nCool\n\n\n\n\n\n\n\n\n\n\ncol 3 is\n\n\nright-aligned\n\n\n$1600\n\n\n\n\n\n\ncol 2 is\n\n\ncentered\n\n\n$12\n\n\n\n\n\n\nzebra stripes\n\n\nare neat\n\n\n$1\n\n\n\n\n\n\n\n\nThe outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.\n\n\nMarkdown | Less | Pretty\n--- | --- | ---\n*Still* | `renders` | **nicely**\n1 | 2 | 3\n\n\n\n\n\n\n\n\n\n\nMarkdown\n\n\nLess\n\n\nPretty\n\n\n\n\n\n\n\n\n\n\nStill\n\n\nrenders\n\n\nnicely\n\n\n\n\n\n\n1\n\n\n2\n\n\n3\n\n\n\n\n\n\n\n\nInline HTML\n\n\nYou can also use raw HTML in your Markdown, and it'll mostly work pretty well.\n\n\ndl\n\n  \ndt\nDefinition list\n/dt\n\n  \ndd\nIs something people use sometimes.\n/dd\n\n\n  \ndt\nMarkdown in HTML\n/dt\n\n  \ndd\nDoes *not* work **very** well. Use HTML \nem\ntags\n/em\n.\n/dd\n\n\n/dl\n\n\n\n\n\n\n  \nDefinition list\n\n  \nIs something people use sometimes.\n\n\n  \nMarkdown in HTML\n\n  \nDoes *not* work **very** well. Use HTML \ntags\n.\n\n\n\n\n\nHorizontal Rule\n\n\nThree or more...\n\n\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\n\n\n\n\n\n\nHyphens\n\n\n\n\nAsterisks\n\n\n\n\nUnderscores\n\n\nCode blocks\n\n\nInline `code` has `back-ticks around` it.\n\n\nformat 1:\n\n    #!/usr/bin/python\n    # Code goes here ...\n\nformat 2:\n\n    :::python\n    # Code goes here ...\n\nformat 3: \n\n~~~~~~\n\na href=\n#\nMy code\n/a\n\n~~~~~~\n\n\n\n\n\nInline \ncode\n has \nback-ticks around\n it.\n\n\nformat 1:\n\n\n#!/usr/bin/python\n# Code goes here ...\n\n\n\nformat 2:\n\n\n:::python\n# Code goes here ...\n\n\n\nformat 3: \n\n\na href=\n#\nMy code\n/a\n\n\n\n\n\nformat 4:\n\n\nvar s = \nJavaScript syntax highlighting\n;\nalert(s);\n\n\n\n\nMou config is incorrect??\n\n\ns = \nPython syntax highlighting\n\nprint s\n\n\n\n\nNo language indicated, so no syntax highlighting. \nBut let's throw in a \nb\ntag\n/b\n.\n\n\n\n\nCode block in list\n\n\nindent 8 spaces to insert code block\n\n\n* list1\n\n        code block\n\n* list2\n\n\n\n\n\n\n\n\nlist1\n\n\ncode block\n\n\n\n\n\n\n\nlist2", 
            "title": "Markdown"
        }, 
        {
            "location": "/tackles/markdown/#markdown-notes", 
            "text": "", 
            "title": "MarkDown notes"
        }, 
        {
            "location": "/tackles/markdown/#headers", 
            "text": "# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6", 
            "title": "Headers"
        }, 
        {
            "location": "/tackles/markdown/#h1", 
            "text": "", 
            "title": "H1"
        }, 
        {
            "location": "/tackles/markdown/#h2", 
            "text": "", 
            "title": "H2"
        }, 
        {
            "location": "/tackles/markdown/#h3", 
            "text": "", 
            "title": "H3"
        }, 
        {
            "location": "/tackles/markdown/#h4", 
            "text": "", 
            "title": "H4"
        }, 
        {
            "location": "/tackles/markdown/#h5", 
            "text": "", 
            "title": "H5"
        }, 
        {
            "location": "/tackles/markdown/#h6", 
            "text": "Alternatively, for H1 and H2, an underline-ish style:  Alt-H1\n======\n\nAlt-H2\n------", 
            "title": "H6"
        }, 
        {
            "location": "/tackles/markdown/#alt-h1", 
            "text": "", 
            "title": "Alt-H1"
        }, 
        {
            "location": "/tackles/markdown/#alt-h2", 
            "text": "", 
            "title": "Alt-H2"
        }, 
        {
            "location": "/tackles/markdown/#list", 
            "text": "1. First ordered list item\n2. Another item\n    * Unordered sub-list. \n1. Actual numbers don't matter, just that it's a number\n    1. Ordered sub-list\n4. And another item.\n\n    You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n    To have a line break without a paragraph, you will need to use two trailing spaces.\u22c5\u22c5\n\nNote that this line is separate, but within the same paragraph.\u22c5\u22c5\n    (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)   First ordered list item  Another item  Unordered sub-list.     Actual numbers don't matter, just that it's a number  Ordered sub-list     And another item.  You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).  To have a line break without a paragraph, you will need to use two trailing spaces.\u22c5\u22c5    Note that this line is separate, but within the same paragraph.\u22c5\u22c5\n    (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)   Unordered list can use asterisks  Or minuses  Or pluses", 
            "title": "list"
        }, 
        {
            "location": "/tackles/markdown/#text", 
            "text": "**bold** or __bold__\n\n*this is italic* or _italic_\n\n**blod _italic_**\n\n~~sctrach this~~  bold  or  bold  this is italic  or  italic  blod  italic  ~~sctrach this~~", 
            "title": "text"
        }, 
        {
            "location": "/tackles/markdown/#links", 
            "text": "- style 1: [google](http://www.google.com)\n- style 2:  http://www.google.com \n- style 3: reference style, [google][1]\n\n[1]: http://www.google.com\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png   style 1:  google  style 2:  http://www.google.com  style 3: reference style, [google][1]", 
            "title": "links"
        }, 
        {
            "location": "/tackles/markdown/#quote", 
            "text": "Blockquotes are very handy in email to emulate reply text.  This line is part of the same quote.\n\nQuote break.  This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote.    Blockquotes are very handy in email to emulate reply text.\nThis line is part of the same quote.   Quote break.   This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can  put   Markdown  into a blockquote.", 
            "title": "quote"
        }, 
        {
            "location": "/tackles/markdown/#images", 
            "text": "Here's our logo (hover to see the title text):  Inline-style: \n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png  Logo Title Text 1 )\n\nReference-style: \n![alt text][logo]  Inline-style:   Reference-style: \n![alt text][logo]", 
            "title": "Images"
        }, 
        {
            "location": "/tackles/markdown/#table", 
            "text": "Colons can be used to align columns.  | Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |     Tables  Are  Cool      col 3 is  right-aligned  $1600    col 2 is  centered  $12    zebra stripes  are neat  $1     The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.  Markdown | Less | Pretty\n--- | --- | ---\n*Still* | `renders` | **nicely**\n1 | 2 | 3     Markdown  Less  Pretty      Still  renders  nicely    1  2  3", 
            "title": "table"
        }, 
        {
            "location": "/tackles/markdown/#inline-html", 
            "text": "You can also use raw HTML in your Markdown, and it'll mostly work pretty well.  dl \n   dt Definition list /dt \n   dd Is something people use sometimes. /dd \n\n   dt Markdown in HTML /dt \n   dd Does *not* work **very** well. Use HTML  em tags /em . /dd  /dl   \n   Definition list \n   Is something people use sometimes. \n\n   Markdown in HTML \n   Does *not* work **very** well. Use HTML  tags .", 
            "title": "Inline HTML"
        }, 
        {
            "location": "/tackles/markdown/#horizontal-rule", 
            "text": "Three or more...  ---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores   Hyphens   Asterisks   Underscores", 
            "title": "Horizontal Rule"
        }, 
        {
            "location": "/tackles/markdown/#code-blocks", 
            "text": "Inline `code` has `back-ticks around` it.\n\n\nformat 1:\n\n    #!/usr/bin/python\n    # Code goes here ...\n\nformat 2:\n\n    :::python\n    # Code goes here ...\n\nformat 3: \n\n~~~~~~ a href= # My code /a \n~~~~~~  Inline  code  has  back-ticks around  it.  format 1:  #!/usr/bin/python\n# Code goes here ...  format 2:  :::python\n# Code goes here ...  format 3:   a href= # My code /a   format 4:  var s =  JavaScript syntax highlighting ;\nalert(s);  Mou config is incorrect??  s =  Python syntax highlighting \nprint s  No language indicated, so no syntax highlighting. \nBut let's throw in a  b tag /b .", 
            "title": "Code blocks"
        }, 
        {
            "location": "/tackles/markdown/#code-block-in-list", 
            "text": "indent 8 spaces to insert code block  * list1\n\n        code block\n\n* list2    list1  code block    list2", 
            "title": "Code block in list"
        }, 
        {
            "location": "/tackles/mkdocs/", 
            "text": "MkDocs\n\n\nMkdocs converts a list of markdown files into a well orgnized website. This site is an example of the output of mkdocs.\n\n\nFor full documentation, visit \nmkdocs.org\n.\n\n\nBasics\n\n\n$ mkdocs new [dir-name]    # Create a new project.\n$ cd [dir-name]\n$ mkdocs build             # Build the documentation site.\n$ mkdocs serve             # Start the live-reloading docs server.\n$ mkdocs help              # Print this help message.\n\n\n\n\nFile layout\n\n\nmkdocs.yml    #\u00a0The configuration file, edit site title, theme, etc.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\nstie/\n    ...       # site generated by mkdocs\n\n\n\nResources\n\n\nmkdocs \nthemes\n\n\nDisplay math\n\n\nThis is actually easier than I expected. First I installed the Python-Markdown-Math Extension:\n\n\npip install https://github.com/mitya57/python-markdown-math/archive/master.zip\nThen I created a new MkDocs project:\n\n\nmkdocs new test_math\nNext I edited the test_math/docs/index.md file to be as follows (sample borrowed from the MathJax documentation):\n\n\nMathJax Test Page\n\n\nWhen \\(a \\ne 0\\), there are two solutions to \\(ax^2 + bx + c = 0\\) and they are\n$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$\nFinally, I edited the test_math/config.yaml file to be as follows:\n\nsite_name: Test Math\n\nextra_javascript: \n    - http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\n\n    markdown_extensions:\n        - mdx_math\n        I was unsure if this would work, but I ran the test server to see:", 
            "title": "Mkdocs"
        }, 
        {
            "location": "/tackles/mkdocs/#mkdocs", 
            "text": "Mkdocs converts a list of markdown files into a well orgnized website. This site is an example of the output of mkdocs.  For full documentation, visit  mkdocs.org .", 
            "title": "MkDocs"
        }, 
        {
            "location": "/tackles/mkdocs/#basics", 
            "text": "$ mkdocs new [dir-name]    # Create a new project.\n$ cd [dir-name]\n$ mkdocs build             # Build the documentation site.\n$ mkdocs serve             # Start the live-reloading docs server.\n$ mkdocs help              # Print this help message.", 
            "title": "Basics"
        }, 
        {
            "location": "/tackles/mkdocs/#file-layout", 
            "text": "mkdocs.yml    #\u00a0The configuration file, edit site title, theme, etc.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\nstie/\n    ...       # site generated by mkdocs", 
            "title": "File layout"
        }, 
        {
            "location": "/tackles/mkdocs/#resources", 
            "text": "mkdocs  themes", 
            "title": "Resources"
        }, 
        {
            "location": "/tackles/mkdocs/#display-math", 
            "text": "This is actually easier than I expected. First I installed the Python-Markdown-Math Extension:  pip install https://github.com/mitya57/python-markdown-math/archive/master.zip\nThen I created a new MkDocs project:  mkdocs new test_math\nNext I edited the test_math/docs/index.md file to be as follows (sample borrowed from the MathJax documentation):", 
            "title": "Display math"
        }, 
        {
            "location": "/tackles/mkdocs/#mathjax-test-page", 
            "text": "When \\(a \\ne 0\\), there are two solutions to \\(ax^2 + bx + c = 0\\) and they are\n$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$\nFinally, I edited the test_math/config.yaml file to be as follows:\n\nsite_name: Test Math\n\nextra_javascript: \n    - http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML\n\n    markdown_extensions:\n        - mdx_math\n        I was unsure if this would work, but I ran the test server to see:", 
            "title": "MathJax Test Page"
        }, 
        {
            "location": "/work/DG_note/", 
            "text": "notes to run Time_domain_DG\n\n\nssh to conte\n\n\ncd Time_domain_DG/RKDG/input\nqsub simu_qsub\n\n\n\n\nrun code interactively\n\n\n-q gmig -l nodes=1:ppn=16,walltime=4:00:00\n\n\n\n\nuseful commends\n\n\nqstat\nqstat -u \nchen1430\n\nqdel", 
            "title": "DG note"
        }, 
        {
            "location": "/work/DG_note/#notes-to-run-time_domain_dg", 
            "text": "ssh to conte  cd Time_domain_DG/RKDG/input\nqsub simu_qsub  run code interactively  -q gmig -l nodes=1:ppn=16,walltime=4:00:00  useful commends  qstat\nqstat -u  chen1430 \nqdel", 
            "title": "notes to run Time_domain_DG"
        }, 
        {
            "location": "/work/python_libraries/", 
            "text": "[\n- back\n] to the pattern_classification repository\n\n\nSebastian Raschka\n\nlast updated: 10/22/2014 \n\n\nUseful libraries for data science in Python\n\n\nThis is not meant to be a complete list of all Python libraries out there that are related to scientific computing and data analysis -- printed on paper and stacked one on top of the other, the stack could easily reach a height of 238,857 miles, the distance from Earth to Moon.\n\n\nHowever, I would still be looking forward to additions and suggestions.\n\nPlease feel free to drop me a note via\n\ntwitter\n, \nemail\n, or \ngoogle+\n.\n\n\n\n\n\n\n\n\nTable of Contents\n\n\n\n\nFundamental Libraries for Scientific Computing\n\n\nIPython Notebook\n\n\nNumPy\n\n\npandas\n\n\nSciPy\n\n\n\n\n\n\nMath and Statistics\n\n\nSymPy\n\n\nStatsmodels\n\n\n\n\n\n\nMachine Learning\n\n\nScikit-learn\n\n\nShogun\n\n\nPyBrain\n\n\nPyLearn2\n\n\nPyMC\n\n\n\n\n\n\nPlotting and Visualization\n\n\nBokeh\n\n\nd3py\n\n\nggplot\n\n\nmatplotlib\n\n\nplotly\n\n\nprettyplotlib\n\n\nseaborn\n\n\n\n\n\n\nData formatting and storage\n\n\ncsvkit\n\n\nPyTables\n\n\nsqlite3\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFundamental Libraries for Scientific Computing\n\n\nback to top\n\n\n\n\n\n\nIPython Notebook\n\n\nWebsite: \nhttp://ipython.org/notebook.html\n\n\nIPython is an alternative Python command line shell for interactive computing with lots of useful enhancements over the \"default\" Python interpreter.\n\nThe browser-based documents IPython Notebooks are a great environment for scientific computing: Not only to execute code, but also to add informative documentation via Markdown, HTML, LaTeX, embedded images, and inline data plots via e.g., matplotlib. \n\n\n\n\n\n\nNumPy\n\n\nWebsite: \nhttp://www.numpy.org\n\n\nNumPy is probably the most fundamental package for efficient scientific computing in Python through linear algebra routines. One of NumPy's major strength is that most operations are implemented as C/C++ and FORTRAN code for efficiency. At its core, NumPy works with multi-dimensional array objects that support broadcasting and lead to efficient, vectorized code.\n\n\n \n\n\n\n\npandas\n\n\nWebsite: \nhttp://pandas.pydata.org\n\n\nPandas is a library for operating with table-like structures. It comes with a powerful DataFrame object, which is a multi-dimensional array object for efficient numerical operations similar to NumPy's \nndarray\n with additional functionalities.\n\n\n\n\n\n\nSciPy\n\n\nWebsite: \nhttp://scipy.org/scipylib/index.html\n\n\nSciPy is a considered to be one of the core packages for scientific computing routines. As a useful expansion of the NumPy core functionality, it contains a broad range of functions for linear algebra, interpolation, integration, clustering, and \nmany more\n.\n\n\n\n\n\n\n\n\nMath and Statistics\n\n\nback to top\n\n\n\n\n\n\nSymPy\n\n\nWebsite: \nhttp://www.sympygamma.com\n\n\nSymPy is a Python library for symbolic mathematical computations. It has a broad range of features, ranging from calculus, algebra, geometry, discrete mathematics, and even quantum physics. It also includes basic plotting functionality and print functions with LaTeX support.\n\n\n\n\n\n\nStatsmodels\n\n\nWebsite: \nhttp://statsmodels.sourceforge.net\n\n\nStatsmodel is a Python library that is centered around statistical data analysis mainly through linear models and includes a variety of statistical tests.\n\n\n\n\n\n\n\n\nMachine Learning\n\n\nback to top\n\n\n\n\n\n\nScikit-learn\n\n\nWebsite: \nhttp://scikit-learn.org/stable/\n\n\nScikit-learn is is probably the most popular general machine library for Python. It includes a broad range of different classifiers, cross-validation and other model selection methods, dimensionality reduction techniques, modules for regression and clustering analysis, and a useful data-preprocessing module.\n\n\n\n\n\n\nShogun\n\n\nWebsite: \nhttp://www.shogun-toolbox.org\n\n\nShogun is a machine learning library that is focussed on large-scale kernel methods. Its particular strengths are Support Vector Machines (SVMs) and it comes with a range of different SVM implementations.\n\n\n\n\n\n\nPyBrain\n\n\nWebsite: \nhttp://pybrain.org\n\n\n\n\nPyBrain (Python-Based Reinforcement Learning, Artificial Intelligence and Neural Network Library) is a machine learning library that uses neural networks to focus on supervised learning, reinforcement learning, and evolutionary methods.\n\n\n\n\n\n\nPyLearn2\n\n\nWebsite: \nhttp://deeplearning.net/software/pylearn2/\n\n\nPyLearn2 is a machine learning \nresearch\n library - a library to study machine learning - focussed on deep and convolutional neural networks, restricted Boltzman machines, and auto-encoders.\n\n\n\n\n\n\nPyMC\n\n\nWebsite: \nhttp://pymc-devs.github.io/pymc/index.html\n\n\nThe focus of PyMC is Bayesian statistics and comes with a broad range of algorithms (including Markov Chain Monte Carlo, MCMC) for model fitting.\n\n\n\n\n\n\n\n\nPlotting and Visualization\n\n\nback to top\n\n\n\n\n\n\nBokeh\n\n\nWebsite: \nhttp://bokeh.pydata.org\n\n\nBokeh is a plottling library that is focussed on aesthetic layouts and interactivity to produce high-quality plots for web browsers.\n\n\n\n\n\n\nd3py\n\n\nWebsite: \nhttps://github.com/mikedewar/d3py\n\n\nd3py is a plotting library to create interactive data visualizations based on d3. \n\n\n\n\n\n\nggplot\n\n\nWebsite: \nhttps://github.com/yhat/ggplot\n\n\nggplot is a port of R's popular ggplot2 library, which brings the alternative syntax and unique visualization style to Python. \n\n\n\n\n\n\nmatplotlib\n\n\nWebsite: \nhttp://matplotlib.org\n\n\nMatplotlib is Python's most popular and comprehensive plotting library that is especially useful in combination with NumPy/SciPy. \n\n\n\n\n\n\nplotly\n\n\nWebsite: \nhttps://plot.ly\n\n\nPlotly is a plotting library that is focussed on adding interactivity to data visualizations and to share them via the web for collaborative data analysis. To produce interactive plots, plotly requires connection to the internet to stream data to the plotly servers, however, plots can also be saved in common image formats for offline use.\n\n\n\n\n\n\nprettyplotlib\n\n\nWebsite: \nhttp://olgabot.github.io/prettyplotlib/\n\n\nPrettyplotlib is a nice enhancement-library that turns matplotlib's default styles into beautiful, presentation-ready plots based on information design and color perception studies.\n\n\n\n\n\n\nseaborn\n\n\nWebsite: \nhttp://web.stanford.edu/~mwaskom/software/seaborn/\n\n\nSeaborn is based on matplotlib's core functionality and adds additional features (e.g., violin plots) and visual enhancements to create even more beautiful plots.\n\n\n\n\n\n\n\n\nData formatting and management\n\n\nback to top\n\n\n\n\n\n\ncsvkit\n\n\nWebsite: \nhttps://csvkit.readthedocs.org\n\n\ncsvkit is also known as the \"Swiss Army knife for comma-delimited data files\" that offers additional functionality and features over Python's in-built \ncsv\n module. It comes with several shell command-line tools, e.g., csvgrep, csvsort, etc., but of course it can also be imported as library in Python.\n\n\n\n\n\n\nPyTables\n\n\nWebsite: \nhttp://www.pytables.org\n\n\nPyTables is a library that combines HDF5 and NumPy for working with very large datasets efficiently. PyTables also makes use of C-extensions (via Cython) for fast data access and pulling data into NumPy or pandas arrays.\n\n\n\n\n\n\nsqlite3\n\n\nWebsite: \nhttps://docs.python.org/3.4/library/sqlite3.html\n\n\nAlthough, the \nsqlite3\n is part of Python's Standard Library, it is still worth mentioning this classic that provides a Python interface to SQLite databases. SQLitean open-source SQL database engine that is ideal for smaller workgroups, because it is a single locally stored database file (up to 140 Tb in size) that does not require -- in contrast to SQL -- any server infrastructure.", 
            "title": "Python libraries"
        }, 
        {
            "location": "/work/python_libraries/#useful-libraries-for-data-science-in-python", 
            "text": "This is not meant to be a complete list of all Python libraries out there that are related to scientific computing and data analysis -- printed on paper and stacked one on top of the other, the stack could easily reach a height of 238,857 miles, the distance from Earth to Moon.  However, I would still be looking forward to additions and suggestions. \nPlease feel free to drop me a note via twitter ,  email , or  google+ .", 
            "title": "Useful libraries for data science in Python"
        }, 
        {
            "location": "/work/python_libraries/#table-of-contents", 
            "text": "Fundamental Libraries for Scientific Computing  IPython Notebook  NumPy  pandas  SciPy    Math and Statistics  SymPy  Statsmodels    Machine Learning  Scikit-learn  Shogun  PyBrain  PyLearn2  PyMC    Plotting and Visualization  Bokeh  d3py  ggplot  matplotlib  plotly  prettyplotlib  seaborn    Data formatting and storage  csvkit  PyTables  sqlite3", 
            "title": "Table of Contents"
        }, 
        {
            "location": "/work/python_libraries/#fundamental-libraries-for-scientific-computing", 
            "text": "back to top", 
            "title": "Fundamental Libraries for Scientific Computing"
        }, 
        {
            "location": "/work/python_libraries/#ipython-notebook", 
            "text": "Website:  http://ipython.org/notebook.html  IPython is an alternative Python command line shell for interactive computing with lots of useful enhancements over the \"default\" Python interpreter. \nThe browser-based documents IPython Notebooks are a great environment for scientific computing: Not only to execute code, but also to add informative documentation via Markdown, HTML, LaTeX, embedded images, and inline data plots via e.g., matplotlib.", 
            "title": "IPython Notebook"
        }, 
        {
            "location": "/work/python_libraries/#numpy", 
            "text": "Website:  http://www.numpy.org  NumPy is probably the most fundamental package for efficient scientific computing in Python through linear algebra routines. One of NumPy's major strength is that most operations are implemented as C/C++ and FORTRAN code for efficiency. At its core, NumPy works with multi-dimensional array objects that support broadcasting and lead to efficient, vectorized code.", 
            "title": "NumPy"
        }, 
        {
            "location": "/work/python_libraries/#pandas", 
            "text": "Website:  http://pandas.pydata.org  Pandas is a library for operating with table-like structures. It comes with a powerful DataFrame object, which is a multi-dimensional array object for efficient numerical operations similar to NumPy's  ndarray  with additional functionalities.", 
            "title": "pandas"
        }, 
        {
            "location": "/work/python_libraries/#scipy", 
            "text": "Website:  http://scipy.org/scipylib/index.html  SciPy is a considered to be one of the core packages for scientific computing routines. As a useful expansion of the NumPy core functionality, it contains a broad range of functions for linear algebra, interpolation, integration, clustering, and  many more .", 
            "title": "SciPy"
        }, 
        {
            "location": "/work/python_libraries/#math-and-statistics", 
            "text": "back to top", 
            "title": "Math and Statistics"
        }, 
        {
            "location": "/work/python_libraries/#sympy", 
            "text": "Website:  http://www.sympygamma.com  SymPy is a Python library for symbolic mathematical computations. It has a broad range of features, ranging from calculus, algebra, geometry, discrete mathematics, and even quantum physics. It also includes basic plotting functionality and print functions with LaTeX support.", 
            "title": "SymPy"
        }, 
        {
            "location": "/work/python_libraries/#statsmodels", 
            "text": "Website:  http://statsmodels.sourceforge.net  Statsmodel is a Python library that is centered around statistical data analysis mainly through linear models and includes a variety of statistical tests.", 
            "title": "Statsmodels"
        }, 
        {
            "location": "/work/python_libraries/#machine-learning", 
            "text": "back to top", 
            "title": "Machine Learning"
        }, 
        {
            "location": "/work/python_libraries/#scikit-learn", 
            "text": "Website:  http://scikit-learn.org/stable/  Scikit-learn is is probably the most popular general machine library for Python. It includes a broad range of different classifiers, cross-validation and other model selection methods, dimensionality reduction techniques, modules for regression and clustering analysis, and a useful data-preprocessing module.", 
            "title": "Scikit-learn"
        }, 
        {
            "location": "/work/python_libraries/#shogun", 
            "text": "Website:  http://www.shogun-toolbox.org  Shogun is a machine learning library that is focussed on large-scale kernel methods. Its particular strengths are Support Vector Machines (SVMs) and it comes with a range of different SVM implementations.", 
            "title": "Shogun"
        }, 
        {
            "location": "/work/python_libraries/#pybrain", 
            "text": "Website:  http://pybrain.org   PyBrain (Python-Based Reinforcement Learning, Artificial Intelligence and Neural Network Library) is a machine learning library that uses neural networks to focus on supervised learning, reinforcement learning, and evolutionary methods.", 
            "title": "PyBrain"
        }, 
        {
            "location": "/work/python_libraries/#pylearn2", 
            "text": "Website:  http://deeplearning.net/software/pylearn2/  PyLearn2 is a machine learning  research  library - a library to study machine learning - focussed on deep and convolutional neural networks, restricted Boltzman machines, and auto-encoders.", 
            "title": "PyLearn2"
        }, 
        {
            "location": "/work/python_libraries/#pymc", 
            "text": "Website:  http://pymc-devs.github.io/pymc/index.html  The focus of PyMC is Bayesian statistics and comes with a broad range of algorithms (including Markov Chain Monte Carlo, MCMC) for model fitting.", 
            "title": "PyMC"
        }, 
        {
            "location": "/work/python_libraries/#plotting-and-visualization", 
            "text": "back to top", 
            "title": "Plotting and Visualization"
        }, 
        {
            "location": "/work/python_libraries/#bokeh", 
            "text": "Website:  http://bokeh.pydata.org  Bokeh is a plottling library that is focussed on aesthetic layouts and interactivity to produce high-quality plots for web browsers.", 
            "title": "Bokeh"
        }, 
        {
            "location": "/work/python_libraries/#d3py", 
            "text": "Website:  https://github.com/mikedewar/d3py  d3py is a plotting library to create interactive data visualizations based on d3.", 
            "title": "d3py"
        }, 
        {
            "location": "/work/python_libraries/#ggplot", 
            "text": "Website:  https://github.com/yhat/ggplot  ggplot is a port of R's popular ggplot2 library, which brings the alternative syntax and unique visualization style to Python.", 
            "title": "ggplot"
        }, 
        {
            "location": "/work/python_libraries/#matplotlib", 
            "text": "Website:  http://matplotlib.org  Matplotlib is Python's most popular and comprehensive plotting library that is especially useful in combination with NumPy/SciPy.", 
            "title": "matplotlib"
        }, 
        {
            "location": "/work/python_libraries/#plotly", 
            "text": "Website:  https://plot.ly  Plotly is a plotting library that is focussed on adding interactivity to data visualizations and to share them via the web for collaborative data analysis. To produce interactive plots, plotly requires connection to the internet to stream data to the plotly servers, however, plots can also be saved in common image formats for offline use.", 
            "title": "plotly"
        }, 
        {
            "location": "/work/python_libraries/#prettyplotlib", 
            "text": "Website:  http://olgabot.github.io/prettyplotlib/  Prettyplotlib is a nice enhancement-library that turns matplotlib's default styles into beautiful, presentation-ready plots based on information design and color perception studies.", 
            "title": "prettyplotlib"
        }, 
        {
            "location": "/work/python_libraries/#seaborn", 
            "text": "Website:  http://web.stanford.edu/~mwaskom/software/seaborn/  Seaborn is based on matplotlib's core functionality and adds additional features (e.g., violin plots) and visual enhancements to create even more beautiful plots.", 
            "title": "seaborn"
        }, 
        {
            "location": "/work/python_libraries/#data-formatting-and-management", 
            "text": "back to top", 
            "title": "Data formatting and management"
        }, 
        {
            "location": "/work/python_libraries/#csvkit", 
            "text": "Website:  https://csvkit.readthedocs.org  csvkit is also known as the \"Swiss Army knife for comma-delimited data files\" that offers additional functionality and features over Python's in-built  csv  module. It comes with several shell command-line tools, e.g., csvgrep, csvsort, etc., but of course it can also be imported as library in Python.", 
            "title": "csvkit"
        }, 
        {
            "location": "/work/python_libraries/#pytables", 
            "text": "Website:  http://www.pytables.org  PyTables is a library that combines HDF5 and NumPy for working with very large datasets efficiently. PyTables also makes use of C-extensions (via Cython) for fast data access and pulling data into NumPy or pandas arrays.", 
            "title": "PyTables"
        }, 
        {
            "location": "/work/python_libraries/#sqlite3", 
            "text": "Website:  https://docs.python.org/3.4/library/sqlite3.html  Although, the  sqlite3  is part of Python's Standard Library, it is still worth mentioning this classic that provides a Python interface to SQLite databases. SQLitean open-source SQL database engine that is ideal for smaller workgroups, because it is a single locally stored database file (up to 140 Tb in size) that does not require -- in contrast to SQL -- any server infrastructure.", 
            "title": "sqlite3"
        }, 
        {
            "location": "/work/python_notes/", 
            "text": "Python notes\n\n\n\n\nPackages\n\n\nSee \npackage list\n for more\n\n\n\n\nFundamental Libraries for Scientific Computing\n\n\nIPython Notebook\n\n\nNumPy\n\n\npandas\n\n\nSciPy\n\n\n\n\n\n\nMath and Statistics\n\n\nSymPy\n\n\nStatsmodels\n\n\n\n\n\n\nMachine Learning\n\n\nScikit-learn\n\n\nShogun\n\n\nPyBrain\n\n\nPyLearn2\n\n\nPyMC\n\n\n\n\n\n\nPlotting and Visualization\n\n\nBokeh\n\n\nd3py\n\n\nggplot\n\n\nmatplotlib\n\n\nplotly\n\n\nprettyplotlib\n\n\nseaborn\n\n\n\n\n\n\nData formatting and storage\n\n\ncsvkit\n\n\nPyTables\n\n\nsqlite3", 
            "title": "Python notes"
        }, 
        {
            "location": "/work/python_notes/#python-notes", 
            "text": "", 
            "title": "Python notes"
        }, 
        {
            "location": "/work/python_notes/#packages", 
            "text": "See  package list  for more   Fundamental Libraries for Scientific Computing  IPython Notebook  NumPy  pandas  SciPy    Math and Statistics  SymPy  Statsmodels    Machine Learning  Scikit-learn  Shogun  PyBrain  PyLearn2  PyMC    Plotting and Visualization  Bokeh  d3py  ggplot  matplotlib  plotly  prettyplotlib  seaborn    Data formatting and storage  csvkit  PyTables  sqlite3", 
            "title": "Packages"
        }
    ]
}