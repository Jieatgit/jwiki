{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Jie's wiki\n\n\nContents:\n\n\n\n\nLinux / Mac notes", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-jies-wiki", 
            "text": "", 
            "title": "Welcome to Jie's wiki"
        }, 
        {
            "location": "/#contents", 
            "text": "Linux / Mac notes", 
            "title": "Contents:"
        }, 
        {
            "location": "/tackles/Fortran/", 
            "text": "Some notes for Fortran:\n\n\ncompile codes: \ngfortran hello.f\ngfortran hello.f -o hello.out\n\n\nrun codes:\n./a.out\n./hello.out\n\n\nVim notes:\n1. remove red Tab highline:\n:hi link fortranTab NONE\n:hi link fortranTab ERROR\n\n\n\n\n\n\n\n\nServer\nssh chen1430@ueler.math.purdue.edu\nscp local_file chen1430@...edu:dir/\n\n\ngit config --global core.excludesfile ~/.gitignore", 
            "title": "Fortran"
        }, 
        {
            "location": "/tackles/mac_commands/", 
            "text": "(1)\n\n\n\n\n\n\nunpack .tar.gz files  \n\n\n\n\n\n\n\n\n- $ gunzip -c foo.tar.gz\n\n\ntar xopf -\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nunpack .tar files   \n\n$ tar xopf foo.tar\n\n$ tar xopft foo.tar\n\n\n\n\n\n\nunpack .zip files \n$ unzip -a foo.zip\n\n\n\n\n\n\npack .zip files \n\n$ zip -r y.zip y.pdf\n\n\n\n\n\n\n(2)\n\n\ndisk usage\n\n\n\n\n$ du -h\n\n\n$ du -sh\n\n\n$ du -sh *\n\n\n$ du -sh dir_path\n\n\n$ du -a\n\n\n$ du -c # total contral\n\n\n\n\n$ du -sh #show total usage in the dir\n\n\n\n\n\n\n$ df -h\n\n\n\n\n\n\n(3) 4.25.2014\n\n\n\n\nvim-latex is install in ~/.vim\n\n\nto configure vim only for latex:\n\n\nedit file ~/.vim/ftplugin/tex_latexSuite.vim\n\n\n\n\n(4) conte.rcac.purdue.edu cluster:\n\n\n\n\n$ module avail  # shows all available modules\n\n\n$ module load   # load module, for example:\n\n\n$ module load matlab/R2013a\n\n\n\n\n(5) virtualbox\n\n\n\n\nID/pw ubuntu/chenjie\n\n\n\n\nchange ubuntu password:\n\n\n\n\nreboot while hold shift\n\n\nLet your virtual Machine to capture your mouse.\n\n\nHold the shift key down to get the grub menu.\n\n\nSelect the recovery mode option.\n\n\nSelect drop to root shell prompt.\n\n\ntype command: mount -rw -o remount /\n\n\nNow, change with # passwd [username] (You can also see the list of users using # nano /etc/passwd).\n\n\n\n\n\n\n\n\nmount shared folder:\n\n\n\n\nadd shared folder in virtualBox\n\n\ntype command in ubuntu: \n\n$ sudo mount -t vboxsf -o uid=1000,gid=1000 share /home/\n/vboxshare\n\n\n\n\n\n\n\n\n(6) grip\n\n\nhttps://github.com/joeyespo/grip\nuse grip to convert md file to html file from command line\n\n\ngrip \ngrip foo.md\ngrip foo.md --export foo.html\n\n\n\n\n(7) Sypder-py2\n\n\nadd a new module to Syper\n\n\n$python\n\nimport talib\n\ntalib  # copy the module location\n\neixt()\n\n\n\n\nIf it is a .egg file\n\n\n$cp new_module.egg /Applications/Spyder-Py2.app/Contents/Resources/lib/python2.7/\nunzip new_module.egg\nrm new_module.egg\n\n\n\n\nif it is a folder\n\n\n$cp -r new_module_folder /Applications/Spyder-Py2.app/Contents/Resources/lib/python2.7\n\n\n\n\n(8) Setting up SSH public/private keys\n\n\nSSH (Secure Shell) can be set up with public/private key pairs so that you do not have to type the password each time. Because SSH is the transport for other services such as SCP (secure copy), SFTP (secure file transfer), and other services (CVS, etc), this can be very convenient and save you a lot of typing.\n\n\nSSH Version 2\n\n\nOn the local machine, type the BOLD part. The non-bold part is what you might see as output or prompt.\n\n\n\n\n\n\nStep 1: \n\n\n% ssh-keygen -t dsa \n    Generating public/private dsa key pair. \n    Enter file in which to save the key (~/.ssh/id_dsa): (just type return) \n    Enter passphrase (empty for no passphrase): (just type return) \n    Enter same passphrase again: (just type return) \n    Your identification has been saved in ~/.ssh/id_dsa \n    Your public key has been saved in ~/.ssh/id_dsa.pub \n    The key fingerprint is: \n    Some really long string\n\n\n\n\nStep 2: Then, paste the content of the local ~/.ssh/id_dsa.pub file into the file ~/.ssh/authorized_keys on the remote host.\nRSA instead of DSA\n\n\nIf you want something strong, you could try \n\n\n% ssh-keygen -t rsa -b 4096\n\n\nInstead of the names id_dsa and id_dsa.pub, it will be id_rsa and id_rsa.pub , etc.\n\n\nThe rest of the steps are identical.\n\n\n\n\n\n\n\n\n\n\n\n\nscreen\n\n\n\n\nlist all screen sessions\n\n\nstart screen\n\n\n\n\nscreen -ls\nscreen\nscreen -S Name\nscreen -r\nscreen -r Name\n\n\n\n\n\n\nexit\n\n\n\n\nexit\nC-a d\nC-a D D\nC-a \\", 
            "title": "Mac commands"
        }, 
        {
            "location": "/tackles/mac_commands/#1", 
            "text": "unpack .tar.gz files       - $ gunzip -c foo.tar.gz  tar xopf -        unpack .tar files    \n$ tar xopf foo.tar \n$ tar xopft foo.tar    unpack .zip files \n$ unzip -a foo.zip    pack .zip files  \n$ zip -r y.zip y.pdf", 
            "title": "(1)"
        }, 
        {
            "location": "/tackles/mac_commands/#2", 
            "text": "disk usage   $ du -h  $ du -sh  $ du -sh *  $ du -sh dir_path  $ du -a  $ du -c # total contral   $ du -sh #show total usage in the dir    $ df -h", 
            "title": "(2)"
        }, 
        {
            "location": "/tackles/mac_commands/#3-4252014", 
            "text": "vim-latex is install in ~/.vim  to configure vim only for latex:  edit file ~/.vim/ftplugin/tex_latexSuite.vim", 
            "title": "(3) 4.25.2014"
        }, 
        {
            "location": "/tackles/mac_commands/#4-contercacpurdueedu-cluster", 
            "text": "$ module avail  # shows all available modules  $ module load   # load module, for example:  $ module load matlab/R2013a", 
            "title": "(4) conte.rcac.purdue.edu cluster:"
        }, 
        {
            "location": "/tackles/mac_commands/#5-virtualbox", 
            "text": "ID/pw ubuntu/chenjie   change ubuntu password:   reboot while hold shift  Let your virtual Machine to capture your mouse.  Hold the shift key down to get the grub menu.  Select the recovery mode option.  Select drop to root shell prompt.  type command: mount -rw -o remount /  Now, change with # passwd [username] (You can also see the list of users using # nano /etc/passwd).     mount shared folder:   add shared folder in virtualBox  type command in ubuntu:  \n$ sudo mount -t vboxsf -o uid=1000,gid=1000 share /home/ /vboxshare", 
            "title": "(5) virtualbox"
        }, 
        {
            "location": "/tackles/mac_commands/#6-grip", 
            "text": "https://github.com/joeyespo/grip\nuse grip to convert md file to html file from command line  grip \ngrip foo.md\ngrip foo.md --export foo.html", 
            "title": "(6) grip"
        }, 
        {
            "location": "/tackles/mac_commands/#7-sypder-py2", 
            "text": "add a new module to Syper  $python import talib talib  # copy the module location eixt()  If it is a .egg file  $cp new_module.egg /Applications/Spyder-Py2.app/Contents/Resources/lib/python2.7/\nunzip new_module.egg\nrm new_module.egg  if it is a folder  $cp -r new_module_folder /Applications/Spyder-Py2.app/Contents/Resources/lib/python2.7", 
            "title": "(7) Sypder-py2"
        }, 
        {
            "location": "/tackles/mac_commands/#8-setting-up-ssh-publicprivate-keys", 
            "text": "SSH (Secure Shell) can be set up with public/private key pairs so that you do not have to type the password each time. Because SSH is the transport for other services such as SCP (secure copy), SFTP (secure file transfer), and other services (CVS, etc), this can be very convenient and save you a lot of typing.", 
            "title": "(8) Setting up SSH public/private keys"
        }, 
        {
            "location": "/tackles/mac_commands/#ssh-version-2", 
            "text": "On the local machine, type the BOLD part. The non-bold part is what you might see as output or prompt.    Step 1:   % ssh-keygen -t dsa \n    Generating public/private dsa key pair. \n    Enter file in which to save the key (~/.ssh/id_dsa): (just type return) \n    Enter passphrase (empty for no passphrase): (just type return) \n    Enter same passphrase again: (just type return) \n    Your identification has been saved in ~/.ssh/id_dsa \n    Your public key has been saved in ~/.ssh/id_dsa.pub \n    The key fingerprint is: \n    Some really long string   Step 2: Then, paste the content of the local ~/.ssh/id_dsa.pub file into the file ~/.ssh/authorized_keys on the remote host.\nRSA instead of DSA  If you want something strong, you could try   % ssh-keygen -t rsa -b 4096  Instead of the names id_dsa and id_dsa.pub, it will be id_rsa and id_rsa.pub , etc.  The rest of the steps are identical.", 
            "title": "SSH Version 2"
        }, 
        {
            "location": "/tackles/mac_commands/#screen", 
            "text": "list all screen sessions  start screen   screen -ls\nscreen\nscreen -S Name\nscreen -r\nscreen -r Name   exit   exit\nC-a d\nC-a D D\nC-a \\", 
            "title": "screen"
        }, 
        {
            "location": "/tackles/markdown/", 
            "text": "MarkDown notes\n\n\nHeaders\n\n\n# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6\n\n\n\n\nH1\n\n\nH2\n\n\nH3\n\n\nH4\n\n\nH5\n\n\nH6\n\n\nAlternatively, for H1 and H2, an underline-ish style:\n\n\nAlt-H1\n======\n\nAlt-H2\n------\n\n\n\n\nAlt-H1\n\n\nAlt-H2\n\n\nlist\n\n\n1. First ordered list item\n2. Another item\n    * Unordered sub-list. \n1. Actual numbers don't matter, just that it's a number\n    1. Ordered sub-list\n4. And another item.\n\n    You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n    To have a line break without a paragraph, you will need to use two trailing spaces.\u22c5\u22c5\n\nNote that this line is separate, but within the same paragraph.\u22c5\u22c5\n    (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n\n\n\n\n\nFirst ordered list item\n\n\nAnother item\n\n\nUnordered sub-list. \n\n\n\n\n\n\nActual numbers don't matter, just that it's a number\n\n\nOrdered sub-list\n\n\n\n\n\n\n\n\nAnd another item.\n\n\nYou can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n\nTo have a line break without a paragraph, you will need to use two trailing spaces.\u22c5\u22c5\n\n\n\n\n\n\nNote that this line is separate, but within the same paragraph.\u22c5\u22c5\n    (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n\n\n\nUnordered list can use asterisks\n\n\nOr minuses\n\n\nOr pluses\n\n\n\n\ntext\n\n\n**bold** or __bold__\n\n*this is italic* or _italic_\n\n**blod _italic_**\n\n~~sctrach this~~\n\n\n\n\nbold\n or \nbold\n\n\nthis is italic\n or \nitalic\n\n\nblod \nitalic\n\n\n~~sctrach this~~\n\n\nlinks\n\n\n- style 1: [google](http://www.google.com)\n- style 2: \nhttp://www.google.com\n\n- style 3: reference style, [google][1]\n\n[1]: http://www.google.com\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png\n\n\n\n\n\n\nstyle 1: \ngoogle\n\n\nstyle 2: \nhttp://www.google.com\n\n\nstyle 3: reference style, [google][1]\n\n\n\n\nquote\n\n\n Blockquotes are very handy in email to emulate reply text.\n\n This line is part of the same quote.\n\nQuote break.\n\n\n This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. \n\n\n\n\n\n\nBlockquotes are very handy in email to emulate reply text.\nThis line is part of the same quote.\n\n\n\n\nQuote break.\n\n\n\n\nThis is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can \nput\n \nMarkdown\n into a blockquote. \n\n\n\n\nImages\n\n\nHere's our logo (hover to see the title text):\n\n\nInline-style: \n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \nLogo Title Text 1\n)\n\nReference-style: \n![alt text][logo]\n\n\n\n\nInline-style: \n\n\n\nReference-style: \n![alt text][logo]\n\n\ntable\n\n\nColons can be used to align columns.\n\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\n\n\n\n\n\n\n\n\n\nTables\n\n\nAre\n\n\nCool\n\n\n\n\n\n\n\n\n\n\ncol 3 is\n\n\nright-aligned\n\n\n$1600\n\n\n\n\n\n\ncol 2 is\n\n\ncentered\n\n\n$12\n\n\n\n\n\n\nzebra stripes\n\n\nare neat\n\n\n$1\n\n\n\n\n\n\n\n\nThe outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.\n\n\nMarkdown | Less | Pretty\n--- | --- | ---\n*Still* | `renders` | **nicely**\n1 | 2 | 3\n\n\n\n\n\n\n\n\n\n\nMarkdown\n\n\nLess\n\n\nPretty\n\n\n\n\n\n\n\n\n\n\nStill\n\n\nrenders\n\n\nnicely\n\n\n\n\n\n\n1\n\n\n2\n\n\n3\n\n\n\n\n\n\n\n\nInline HTML\n\n\nYou can also use raw HTML in your Markdown, and it'll mostly work pretty well.\n\n\ndl\n\n  \ndt\nDefinition list\n/dt\n\n  \ndd\nIs something people use sometimes.\n/dd\n\n\n  \ndt\nMarkdown in HTML\n/dt\n\n  \ndd\nDoes *not* work **very** well. Use HTML \nem\ntags\n/em\n.\n/dd\n\n\n/dl\n\n\n\n\n\n\n  \nDefinition list\n\n  \nIs something people use sometimes.\n\n\n  \nMarkdown in HTML\n\n  \nDoes *not* work **very** well. Use HTML \ntags\n.\n\n\n\n\n\nHorizontal Rule\n\n\nThree or more...\n\n\n---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores\n\n\n\n\n\n\nHyphens\n\n\n\n\nAsterisks\n\n\n\n\nUnderscores\n\n\ncode high line\n\n\nInline `code` has `back-ticks around` it.\n\n\nformat 1:\n\n    #!/usr/bin/python\n    # Code goes here ...\n\nformat 2:\n\n    :::python\n    # Code goes here ...\n\nformat 3: \n\n~~~~~~\n\na href=\n#\nMy code\n/a\n\n~~~~~~\n\n\n\n\n\nInline \ncode\n has \nback-ticks around\n it.\n\n\nformat 1:\n\n\n#!/usr/bin/python\n# Code goes here ...\n\n\n\nformat 2:\n\n\n:::python\n# Code goes here ...\n\n\n\nformat 3: \n\n\na href=\n#\nMy code\n/a\n\n\n\n\n\nformat 4:\n\n\nvar s = \nJavaScript syntax highlighting\n;\nalert(s);\n\n\n\n\nMou config is incorrect??\n\n\ns = \nPython syntax highlighting\n\nprint s\n\n\n\n\nNo language indicated, so no syntax highlighting. \nBut let's throw in a \nb\ntag\n/b\n.", 
            "title": "Markdown"
        }, 
        {
            "location": "/tackles/markdown/#markdown-notes", 
            "text": "", 
            "title": "MarkDown notes"
        }, 
        {
            "location": "/tackles/markdown/#headers", 
            "text": "# H1\n## H2\n### H3\n#### H4\n##### H5\n###### H6", 
            "title": "Headers"
        }, 
        {
            "location": "/tackles/markdown/#h1", 
            "text": "", 
            "title": "H1"
        }, 
        {
            "location": "/tackles/markdown/#h2", 
            "text": "", 
            "title": "H2"
        }, 
        {
            "location": "/tackles/markdown/#h3", 
            "text": "", 
            "title": "H3"
        }, 
        {
            "location": "/tackles/markdown/#h4", 
            "text": "", 
            "title": "H4"
        }, 
        {
            "location": "/tackles/markdown/#h5", 
            "text": "", 
            "title": "H5"
        }, 
        {
            "location": "/tackles/markdown/#h6", 
            "text": "Alternatively, for H1 and H2, an underline-ish style:  Alt-H1\n======\n\nAlt-H2\n------", 
            "title": "H6"
        }, 
        {
            "location": "/tackles/markdown/#alt-h1", 
            "text": "", 
            "title": "Alt-H1"
        }, 
        {
            "location": "/tackles/markdown/#alt-h2", 
            "text": "", 
            "title": "Alt-H2"
        }, 
        {
            "location": "/tackles/markdown/#list", 
            "text": "1. First ordered list item\n2. Another item\n    * Unordered sub-list. \n1. Actual numbers don't matter, just that it's a number\n    1. Ordered sub-list\n4. And another item.\n\n    You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n    To have a line break without a paragraph, you will need to use two trailing spaces.\u22c5\u22c5\n\nNote that this line is separate, but within the same paragraph.\u22c5\u22c5\n    (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)   First ordered list item  Another item  Unordered sub-list.     Actual numbers don't matter, just that it's a number  Ordered sub-list     And another item.  You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).  To have a line break without a paragraph, you will need to use two trailing spaces.\u22c5\u22c5    Note that this line is separate, but within the same paragraph.\u22c5\u22c5\n    (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)   Unordered list can use asterisks  Or minuses  Or pluses", 
            "title": "list"
        }, 
        {
            "location": "/tackles/markdown/#text", 
            "text": "**bold** or __bold__\n\n*this is italic* or _italic_\n\n**blod _italic_**\n\n~~sctrach this~~  bold  or  bold  this is italic  or  italic  blod  italic  ~~sctrach this~~", 
            "title": "text"
        }, 
        {
            "location": "/tackles/markdown/#links", 
            "text": "- style 1: [google](http://www.google.com)\n- style 2:  http://www.google.com \n- style 3: reference style, [google][1]\n\n[1]: http://www.google.com\n[logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png   style 1:  google  style 2:  http://www.google.com  style 3: reference style, [google][1]", 
            "title": "links"
        }, 
        {
            "location": "/tackles/markdown/#quote", 
            "text": "Blockquotes are very handy in email to emulate reply text.  This line is part of the same quote.\n\nQuote break.  This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote.    Blockquotes are very handy in email to emulate reply text.\nThis line is part of the same quote.   Quote break.   This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can  put   Markdown  into a blockquote.", 
            "title": "quote"
        }, 
        {
            "location": "/tackles/markdown/#images", 
            "text": "Here's our logo (hover to see the title text):  Inline-style: \n![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png  Logo Title Text 1 )\n\nReference-style: \n![alt text][logo]  Inline-style:   Reference-style: \n![alt text][logo]", 
            "title": "Images"
        }, 
        {
            "location": "/tackles/markdown/#table", 
            "text": "Colons can be used to align columns.  | Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |     Tables  Are  Cool      col 3 is  right-aligned  $1600    col 2 is  centered  $12    zebra stripes  are neat  $1     The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown.  Markdown | Less | Pretty\n--- | --- | ---\n*Still* | `renders` | **nicely**\n1 | 2 | 3     Markdown  Less  Pretty      Still  renders  nicely    1  2  3", 
            "title": "table"
        }, 
        {
            "location": "/tackles/markdown/#inline-html", 
            "text": "You can also use raw HTML in your Markdown, and it'll mostly work pretty well.  dl \n   dt Definition list /dt \n   dd Is something people use sometimes. /dd \n\n   dt Markdown in HTML /dt \n   dd Does *not* work **very** well. Use HTML  em tags /em . /dd  /dl   \n   Definition list \n   Is something people use sometimes. \n\n   Markdown in HTML \n   Does *not* work **very** well. Use HTML  tags .", 
            "title": "Inline HTML"
        }, 
        {
            "location": "/tackles/markdown/#horizontal-rule", 
            "text": "Three or more...  ---\n\nHyphens\n\n***\n\nAsterisks\n\n___\n\nUnderscores   Hyphens   Asterisks   Underscores", 
            "title": "Horizontal Rule"
        }, 
        {
            "location": "/tackles/markdown/#code-high-line", 
            "text": "Inline `code` has `back-ticks around` it.\n\n\nformat 1:\n\n    #!/usr/bin/python\n    # Code goes here ...\n\nformat 2:\n\n    :::python\n    # Code goes here ...\n\nformat 3: \n\n~~~~~~ a href= # My code /a \n~~~~~~  Inline  code  has  back-ticks around  it.  format 1:  #!/usr/bin/python\n# Code goes here ...  format 2:  :::python\n# Code goes here ...  format 3:   a href= # My code /a   format 4:  var s =  JavaScript syntax highlighting ;\nalert(s);  Mou config is incorrect??  s =  Python syntax highlighting \nprint s  No language indicated, so no syntax highlighting. \nBut let's throw in a  b tag /b .", 
            "title": "code high line"
        }, 
        {
            "location": "/tackles/mkdocs/", 
            "text": "Welcome to MkDocs\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    #\u00a0The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n\n\n\nresources\n\n\nmkdocs \nthemes", 
            "title": "Mkdocs"
        }, 
        {
            "location": "/tackles/mkdocs/#welcome-to-mkdocs", 
            "text": "For full documentation visit  mkdocs.org .", 
            "title": "Welcome to MkDocs"
        }, 
        {
            "location": "/tackles/mkdocs/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.", 
            "title": "Commands"
        }, 
        {
            "location": "/tackles/mkdocs/#project-layout", 
            "text": "mkdocs.yml    #\u00a0The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Project layout"
        }, 
        {
            "location": "/tackles/mkdocs/#resources", 
            "text": "mkdocs  themes", 
            "title": "resources"
        }, 
        {
            "location": "/tackles/python_notes/", 
            "text": "Python notes\n\n\n\n\nPackages\n\n\nSee [package list]\n/Users/Jie/Dropbox/work/Study/python/useful_libraries_for_data_science_in_python.md\n for more\n\n\n\n\nFundamental Libraries for Scientific Computing\n\n\nIPython Notebook\n\n\nNumPy\n\n\npandas\n\n\nSciPy\n\n\n\n\n\n\nMath and Statistics\n\n\nSymPy\n\n\nStatsmodels\n\n\n\n\n\n\nMachine Learning\n\n\nScikit-learn\n\n\nShogun\n\n\nPyBrain\n\n\nPyLearn2\n\n\nPyMC\n\n\n\n\n\n\nPlotting and Visualization\n\n\nBokeh\n\n\nd3py\n\n\nggplot\n\n\nmatplotlib\n\n\nplotly\n\n\nprettyplotlib\n\n\nseaborn\n\n\n\n\n\n\nData formatting and storage\n\n\ncsvkit\n\n\nPyTables\n\n\nsqlite3", 
            "title": "Python notes"
        }, 
        {
            "location": "/tackles/python_notes/#python-notes", 
            "text": "", 
            "title": "Python notes"
        }, 
        {
            "location": "/tackles/python_notes/#packages", 
            "text": "See [package list] /Users/Jie/Dropbox/work/Study/python/useful_libraries_for_data_science_in_python.md  for more   Fundamental Libraries for Scientific Computing  IPython Notebook  NumPy  pandas  SciPy    Math and Statistics  SymPy  Statsmodels    Machine Learning  Scikit-learn  Shogun  PyBrain  PyLearn2  PyMC    Plotting and Visualization  Bokeh  d3py  ggplot  matplotlib  plotly  prettyplotlib  seaborn    Data formatting and storage  csvkit  PyTables  sqlite3", 
            "title": "Packages"
        }, 
        {
            "location": "/work/DG_note/", 
            "text": "notes to run Time_domain_DG\n\n\nssh to conte\n\n\ncd Time_domain_DG/RKDG/input\nqsub simu_qsub\n\n\n\n\nrun code interactively\n\n\n-q gmig -l nodes=1:ppn=16,walltime=4:00:00\n\n\n\n\nuseful commends\n\n\nqstat\nqstat -u \nchen1430\n\nqdel", 
            "title": "DG note"
        }, 
        {
            "location": "/work/DG_note/#notes-to-run-time_domain_dg", 
            "text": "ssh to conte  cd Time_domain_DG/RKDG/input\nqsub simu_qsub  run code interactively  -q gmig -l nodes=1:ppn=16,walltime=4:00:00  useful commends  qstat\nqstat -u  chen1430 \nqdel", 
            "title": "notes to run Time_domain_DG"
        }, 
        {
            "location": "/work/Total_motes/", 
            "text": "Notes on Total system\n\n\nexternal wifi signal: ep-guest\n\n\n\n\nusername: external01\n\n\npassword: !pass123\n\n\n\n\nlaptop login\n\n\n\n\nL0447957\n\n\nHouston1!\n\n\n\n\nlinux system login\n\n\n\n\nL0447957/uw password\n\n\n\n\nlaptop login with smart card\n\n\n\n\npin: my BOD\n\n\n\n\nlog in laudev\n\n\nssh laudev01\nssh laudev02\nicexdev\n\n\n\n\nlaudev\n\n\nautompirun -np 16 job.e\nnodeusage\nbjobs\nbkill #id\nbpeek\n\n\n\n\nmodule list\nmodule avail\n\n\ncontacts\n\n\n\n\n\n\n\n\nName\n\n\nemail\n\n\n\n\n\n\n\n\n\n\nHenri Calandra\n\n\n\"henri.calandra@total.com\"\n\n\n\n\n\n\nJing Wen\n\n\n\"jing.wen@total.com\"\n\n\n\n\n\n\nShen Wang\n\n\n\"shen.wang@total.com\"\n\n\n\n\n\n\nBertrand Dequet\n\n\n\"bertrand.dequet@total.com\"", 
            "title": "Total motes"
        }, 
        {
            "location": "/work/Total_motes/#notes-on-total-system", 
            "text": "", 
            "title": "Notes on Total system"
        }, 
        {
            "location": "/work/Total_motes/#external-wifi-signal-ep-guest", 
            "text": "username: external01  password: !pass123", 
            "title": "external wifi signal: ep-guest"
        }, 
        {
            "location": "/work/Total_motes/#laptop-login", 
            "text": "L0447957  Houston1!", 
            "title": "laptop login"
        }, 
        {
            "location": "/work/Total_motes/#linux-system-login", 
            "text": "L0447957/uw password", 
            "title": "linux system login"
        }, 
        {
            "location": "/work/Total_motes/#laptop-login-with-smart-card", 
            "text": "pin: my BOD", 
            "title": "laptop login with smart card"
        }, 
        {
            "location": "/work/Total_motes/#log-in-laudev", 
            "text": "ssh laudev01\nssh laudev02\nicexdev", 
            "title": "log in laudev"
        }, 
        {
            "location": "/work/Total_motes/#laudev", 
            "text": "autompirun -np 16 job.e\nnodeusage\nbjobs\nbkill #id\nbpeek  module list\nmodule avail", 
            "title": "laudev"
        }, 
        {
            "location": "/work/Total_motes/#contacts", 
            "text": "Name  email      Henri Calandra  \"henri.calandra@total.com\"    Jing Wen  \"jing.wen@total.com\"    Shen Wang  \"shen.wang@total.com\"    Bertrand Dequet  \"bertrand.dequet@total.com\"", 
            "title": "contacts"
        }
    ]
}